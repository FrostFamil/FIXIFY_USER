{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/components/Slides.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Button } from 'react-native-elements';\nvar SCREEN_WIDTH = Dimensions.get('window').width;\n\nvar Slides = function (_Component) {\n  _inherits(Slides, _Component);\n\n  function Slides() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Slides);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Slides)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderLastSlide = function (index) {\n      if (index === _this.props.data.length - 1) {\n        return React.createElement(Button, {\n          title: \"Start\",\n          buttonStyle: styles.buttonStyle,\n          onPress: _this.props.onComplete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          }\n        });\n      }\n    };\n\n    _this.renderSlides = function () {\n      return _this.props.data.map(function (slide, index) {\n        return React.createElement(View, {\n          key: slide.id,\n          style: [styles.slide],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          }\n        }, React.createElement(ImageBackground, {\n          source: slide.image,\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          }\n        }, _this.renderLastSlide(index)));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Slides, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        horizontal: true,\n        pagingEnabled: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, this.renderSlides());\n    }\n  }]);\n\n  return Slides;\n}(Component);\n\nvar styles = {\n  slideText: {\n    fontSize: 30,\n    color: 'white'\n  },\n  slide: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: SCREEN_WIDTH\n  },\n  buttonStyle: {\n    backgroundColor: '#f85f68',\n    marginLeft: 142,\n    marginTop: 600,\n    width: 100\n  }\n};\nexport default Slides;","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/components/Slides.js"],"names":["React","Component","Button","SCREEN_WIDTH","Dimensions","get","width","Slides","renderLastSlide","index","props","data","length","styles","buttonStyle","onComplete","renderSlides","map","slide","id","image","height","flex","slideText","fontSize","color","justifyContent","alignItems","backgroundColor","marginLeft","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AAGA,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;;IAEMC,M;;;;;;;;;;;;;;;;UAEJC,e,GAAkB,UAACC,KAAD,EAAW;AAE3B,UAAIA,KAAK,KAAK,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,GAAyB,CAAvC,EAAyC;AACvC,eACE,oBAAC,MAAD;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,WAAW,EAAEC,MAAM,CAACC,WAFtB;AAGE,UAAA,OAAO,EAAE,MAAKJ,KAAL,CAAWK,UAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;AACF,K;;UAEDC,Y,GAAe,YAAM;AACnB,aAAO,MAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoB,UAACC,KAAD,EAAQT,KAAR,EAAkB;AAE3C,eACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAES,KAAK,CAACC,EAAjB;AAAqB,UAAA,KAAK,EAAE,CAACN,MAAM,CAACK,KAAR,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,MAAM,EAAEA,KAAK,CAACE,KAA/B;AAAsC,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,MAAV;AAAkBf,YAAAA,KAAK,EAAE;AAAzB,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAKE,eAAL,CAAqBC,KAArB,CADF,CADF,CADF;AAOD,OATM,CAAP;AAUD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,UAAD;AAAY,QAAA,UAAU,MAAtB;AAAuB,QAAA,aAAa,MAApC;AAAqC,QAAA,KAAK,EAAE;AAAEa,UAAAA,IAAI,EAAE;AAAR,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,YAAL,EADH,CADF;AAKD;;;;EAlCkBf,S;;AAqCrB,IAAMY,MAAM,GAAG;AACbU,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE;AAFE,GADE;AAKbP,EAAAA,KAAK,EAAE;AACLI,IAAAA,IAAI,EAAE,CADD;AAELI,IAAAA,cAAc,EAAE,QAFX;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILrB,IAAAA,KAAK,EAAEH;AAJF,GALM;AAWbW,EAAAA,WAAW,EAAE;AACXc,IAAAA,eAAe,EAAE,SADN;AAEXC,IAAAA,UAAU,EAAE,GAFD;AAGXC,IAAAA,SAAS,EAAE,GAHA;AAIXxB,IAAAA,KAAK,EAAE;AAJI;AAXA,CAAf;AAmBA,eAAeC,MAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { View, Text, ScrollView, Dimensions, ImageBackground } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\n\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\n\r\nclass Slides extends Component {\r\n\r\n  renderLastSlide = (index) => {\r\n\r\n    if (index === this.props.data.length - 1){\r\n      return (\r\n        <Button\r\n          title=\"Start\"\r\n          buttonStyle={styles.buttonStyle}\r\n          onPress={this.props.onComplete}\r\n       />\r\n      );\r\n    }\r\n  }\r\n\r\n  renderSlides = () => {\r\n    return this.props.data.map((slide, index) => {\r\n\r\n      return (\r\n        <View key={slide.id} style={[styles.slide]}>\r\n          <ImageBackground source={slide.image} style={{ height: \"100%\", width: \"100%\"}}>\r\n           {this.renderLastSlide(index)}\r\n          </ImageBackground>\r\n        </View>\r\n      );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ScrollView horizontal pagingEnabled style={{ flex: 1 }}>\r\n        {this.renderSlides()}\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  slideText: {\r\n    fontSize: 30,\r\n    color: 'white'\r\n  },\r\n  slide: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: SCREEN_WIDTH\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#f85f68',\r\n    marginLeft: 142,\r\n    marginTop: 600,\r\n    width: 100\r\n  }\r\n}\r\n\r\nexport default Slides;\r\n"]},"metadata":{},"sourceType":"module"}