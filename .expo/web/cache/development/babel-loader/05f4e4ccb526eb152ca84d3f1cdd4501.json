{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/registerComponents/Input.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"./Text\";\nimport * as theme from \"../constants/theme\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Input = function (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    _classCallCheck(this, Input);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Input).apply(this, arguments));\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          rightLabel = _this$props.rightLabel,\n          full = _this$props.full,\n          email = _this$props.email,\n          phone = _this$props.phone,\n          number = _this$props.number,\n          password = _this$props.password,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, [\"label\", \"rightLabel\", \"full\", \"email\", \"phone\", \"number\", \"password\", \"style\"]);\n\n      var inputStyles = [styles.input, full && styles.full, style];\n      var inputType = email ? 'email-address' : email ? 'numeric' : phone ? 'phone-pad' : 'default';\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }, React.createElement(View, {\n        style: styles.labelContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(Text, {\n        caption: true,\n        medium: true,\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }\n      }, label), rightLabel), React.createElement(TextInput, _extends({\n        style: inputStyles,\n        secureTextEntry: password,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        keyboardType: inputType\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      })));\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nexport { Input as default };\nvar styles = StyleSheet.create({\n  input: {\n    backgroundColor: theme.colors.input,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 7,\n    fontSize: theme.sizes.font,\n    color: theme.colors.white,\n    height: 45,\n    paddingVertical: 11,\n    paddingHorizontal: 16\n  },\n  label: {\n    textTransform: 'uppercase',\n    color: 'white'\n  },\n  labelContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8\n  },\n  full: {\n    width: width - 50\n  }\n});","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/registerComponents/Input.js"],"names":["React","Component","Text","theme","Dimensions","get","width","Input","props","label","rightLabel","full","email","phone","number","password","style","inputStyles","styles","input","inputType","labelContainer","StyleSheet","create","backgroundColor","colors","borderWidth","borderColor","border","borderRadius","fontSize","sizes","font","color","white","height","paddingVertical","paddingHorizontal","textTransform","flexDirection","justifyContent","marginBottom"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,IAAP;AACA,OAAO,KAAKC,KAAZ;;sBAEkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;IAEaC,K;;;;;;;;;;;6BACV;AAAA,wBAC8E,KAAKC,KADnF;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,UADR,eACQA,UADR;AAAA,UACoBC,IADpB,eACoBA,IADpB;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAAA,UACiCC,KADjC,eACiCA,KADjC;AAAA,UACwCC,MADxC,eACwCA,MADxC;AAAA,UACgDC,QADhD,eACgDA,QADhD;AAAA,UAC0DC,KAD1D,eAC0DA,KAD1D;AAAA,UACoER,KADpE;;AAEP,UAAMS,WAAW,GAAG,CAClBC,MAAM,CAACC,KADW,EAElBR,IAAI,IAAIO,MAAM,CAACP,IAFG,EAGlBK,KAHkB,CAApB;AAMA,UAAMI,SAAS,GAAGR,KAAK,GACnB,eADmB,GACDA,KAAK,GACvB,SADuB,GACXC,KAAK,GACjB,WADiB,GACH,SAHlB;AAKA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,MAAM,MAApB;AAAqB,QAAA,KAAK,EAAEH,MAAM,CAACT,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KADH,CADF,EAIGC,UAJH,CADF,EAOE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEO,WADT;AAEE,QAAA,eAAe,EAAEF,QAFnB;AAGE,QAAA,cAAc,EAAC,MAHjB;AAIE,QAAA,WAAW,EAAE,KAJf;AAKE,QAAA,YAAY,EAAEK;AALhB,SAMMZ,KANN;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAkBD;;;;EAhCgCP,S;;SAAdM,K;AAmCrB,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,KAAK,EAAE;AACLK,IAAAA,eAAe,EAAErB,KAAK,CAACsB,MAAN,CAAaN,KADzB;AAELO,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,WAAW,EAAExB,KAAK,CAACsB,MAAN,CAAaG,MAHrB;AAILC,IAAAA,YAAY,EAAE,CAJT;AAKLC,IAAAA,QAAQ,EAAE3B,KAAK,CAAC4B,KAAN,CAAYC,IALjB;AAMLC,IAAAA,KAAK,EAAE9B,KAAK,CAACsB,MAAN,CAAaS,KANf;AAOLC,IAAAA,MAAM,EAAE,EAPH;AAQLC,IAAAA,eAAe,EAAE,EARZ;AASLC,IAAAA,iBAAiB,EAAE;AATd,GADwB;AAY/B5B,EAAAA,KAAK,EAAE;AACL6B,IAAAA,aAAa,EAAE,WADV;AAELL,IAAAA,KAAK,EAAE;AAFF,GAZwB;AAgB/BZ,EAAAA,cAAc,EAAE;AACdkB,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,cAAc,EAAE,eAFF;AAGdC,IAAAA,YAAY,EAAE;AAHA,GAhBe;AAqB/B9B,EAAAA,IAAI,EAAE;AACJL,IAAAA,KAAK,EAAEA,KAAK,GAAG;AADX;AArByB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, View, TextInput, Dimensions } from 'react-native'\r\nimport Text from './Text';\r\nimport * as theme from '../constants/theme';\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nexport default class Input extends Component {\r\n  render() {\r\n    const { label, rightLabel, full, email, phone, number, password, style, ...props } = this.props;\r\n    const inputStyles = [\r\n      styles.input,\r\n      full && styles.full,\r\n      style,\r\n    ];\r\n\r\n    const inputType = email\r\n      ? 'email-address' : email\r\n      ? 'numeric' : phone\r\n      ? 'phone-pad' : 'default';\r\n\r\n    return (\r\n      <View>\r\n        <View style={styles.labelContainer}>\r\n          <Text caption medium style={styles.label}>\r\n            {label}\r\n          </Text>\r\n          {rightLabel}\r\n        </View>\r\n        <TextInput\r\n          style={inputStyles}\r\n          secureTextEntry={password}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          keyboardType={inputType}\r\n          {...props}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    backgroundColor: theme.colors.input,\r\n    borderWidth: 1,\r\n    borderColor: theme.colors.border,\r\n    borderRadius: 7,\r\n    fontSize: theme.sizes.font,\r\n    color: theme.colors.white,\r\n    height: 45,\r\n    paddingVertical: 11,\r\n    paddingHorizontal: 16,\r\n  },\r\n  label: {\r\n    textTransform: 'uppercase',\r\n    color: 'white'\r\n  },\r\n  labelContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8,\r\n  },\r\n  full: {\r\n    width: width - 50,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}