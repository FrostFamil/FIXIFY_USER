{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport { createAnimatedCallFunc } from \"./AnimatedCallFunc\";\nimport { createAnimatedParam } from \"./AnimatedParam\";\n\nvar AnimatedFunction = function (_AnimatedNode) {\n  _inherits(AnimatedFunction, _AnimatedNode);\n\n  function AnimatedFunction(what) {\n    var _this;\n\n    _classCallCheck(this, AnimatedFunction);\n\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedFunction).call(this, {\n      type: 'func',\n      what: what.__nodeID\n    }, [what].concat(params)));\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  return AnimatedFunction;\n}(AnimatedNode);\n\nexport function createAnimatedFunction(cb) {\n  var params = new Array(cb.length);\n\n  for (var i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n\n  var what = cb.apply(void 0, params);\n\n  var func = _construct(AnimatedFunction, [what].concat(params));\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (args.length !== params.length) {\n      throw new Error('Parameter mismatch when calling reanimated function. Expected ' + params.length + ' parameters, got ' + args.length + '.');\n    }\n\n    return createAnimatedCallFunc(func, args, params);\n  };\n}","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-reanimated/src/core/AnimatedFunction.js"],"names":["AnimatedNode","createAnimatedCallFunc","createAnimatedParam","AnimatedFunction","what","params","type","__nodeID","__attach","createAnimatedFunction","cb","Array","length","i","func","args","Error"],"mappings":";;;;;AAAA,OAAOA,YAAP;AACA,SAASC,sBAAT;AACA,SAASC,mBAAT;;IAEMC,gB;;;AACJ,4BAAYC,IAAZ,EAA6B;AAAA;;AAAA;;AAAA,sCAARC,MAAQ;AAARA,MAAAA,MAAQ;AAAA;;AAC3B,0FACE;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEF,MAAAA,IAAI,EAAEA,IAAI,CAACG;AAFb,KADF,GAKGH,IALH,SAKYC,MALZ;;AAOA,UAAKG,QAAL;;AAR2B;AAS5B;;;EAV4BR,Y;;AAa/B,OAAO,SAASS,sBAAT,CAAgCC,EAAhC,EAAoC;AACzC,MAAML,MAAM,GAAG,IAAIM,KAAJ,CAAUD,EAAE,CAACE,MAAb,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACO,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACtCR,IAAAA,MAAM,CAACQ,CAAD,CAAN,GAAYX,mBAAmB,EAA/B;AACD;;AACD,MAAME,IAAI,GAAGM,EAAE,MAAF,SAAML,MAAN,CAAb;;AACA,MAAMS,IAAI,cAAOX,gBAAP,GAAwBC,IAAxB,SAAiCC,MAAjC,EAAV;;AACA,SAAO,YAAa;AAAA,uCAATU,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAClB,QAAIA,IAAI,CAACH,MAAL,KAAgBP,MAAM,CAACO,MAA3B,EAAmC;AACjC,YAAM,IAAII,KAAJ,CACJ,mEACEX,MAAM,CAACO,MADT,GAEE,mBAFF,GAGEG,IAAI,CAACH,MAHP,GAIE,GALE,CAAN;AAOD;;AACD,WAAOX,sBAAsB,CAACa,IAAD,EAAOC,IAAP,EAAaV,MAAb,CAA7B;AACD,GAXD;AAYD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\n\nclass AnimatedFunction extends AnimatedNode {\n  constructor(what, ...params) {\n    super(\n      {\n        type: 'func',\n        what: what.__nodeID,\n      },\n      [what, ...params]\n    );\n    this.__attach();    \n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}