{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-indicator/lib/loader/RippleLoader.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ART } from \"react-native-web/dist/index\";\nimport AnimatedCircle from \"../animated/AnimatedCircle\";\nimport { color } from \"../const\";\nvar Surface = ART.Surface;\n\nvar RippleLoader = function (_React$PureComponent) {\n  _inherits(RippleLoader, _React$PureComponent);\n\n  function RippleLoader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RippleLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RippleLoader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      scales: [new Animated.Value(0.1), new Animated.Value(0.1)],\n      opacities: [new Animated.Value(1), new Animated.Value(1)]\n    };\n    _this.timers = [];\n\n    _this._animation = function (i) {\n      Animated.parallel([Animated.timing(_this.state.scales[i], {\n        toValue: 1,\n        duration: 1600\n      }), Animated.timing(_this.state.opacities[i], {\n        toValue: 0,\n        duration: 1600,\n        delay: 800\n      })]).start(function () {\n        if (!_this.unmounted) {\n          _this.state.scales[i].setValue(0.1);\n\n          _this.state.opacities[i].setValue(1);\n\n          _this._animation(i);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RippleLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.scales.forEach(function (item, i) {\n        var id = setTimeout(function () {\n          _this2._animation(i);\n        }, i * 1200);\n\n        _this2.timers.push(id);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n      this.timers.forEach(function (id) {\n        clearTimeout(id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size,\n          strokeWidth = _this$props.strokeWidth;\n      var _this$state = this.state,\n          scales = _this$state.scales,\n          opacities = _this$state.opacities;\n      return React.createElement(Surface, {\n        width: size + strokeWidth,\n        height: size + strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, scales.map(function (item, i) {\n        return React.createElement(AnimatedCircle, {\n          key: i,\n          radius: size,\n          stroke: color,\n          strokeWidth: strokeWidth,\n          scale: scales[i],\n          opacity: opacities[i],\n          x: (size + strokeWidth) / 2,\n          y: (size + strokeWidth) / 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          }\n        });\n      }));\n    }\n  }]);\n\n  return RippleLoader;\n}(React.PureComponent);\n\nRippleLoader.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number\n};\nRippleLoader.defaultProps = {\n  color: color,\n  size: 40,\n  strokeWidth: 3\n};\nexport { RippleLoader as default };","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-indicator/lib/loader/RippleLoader.js"],"names":["React","PropTypes","ART","AnimatedCircle","color","Surface","RippleLoader","state","scales","Animated","Value","opacities","timers","_animation","i","parallel","timing","toValue","duration","delay","start","unmounted","setValue","forEach","item","id","setTimeout","push","clearTimeout","props","size","strokeWidth","map","PureComponent","propTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, ART } from 'react-native';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nconst { Surface } = ART;\n\nexport default class RippleLoader extends React.PureComponent {\n\tstatic propTypes = {\n\t\tcolor: PropTypes.string,\n\t\tsize: PropTypes.number,\n\t\tstrokeWidth: PropTypes.number\n\t};\n\n\tstatic defaultProps = {\n\t\tcolor,\n\t\tsize: 40,\n\t\tstrokeWidth: 3\n\t};\n\n\tstate = {\n\t\tscales: [new Animated.Value(0.1), new Animated.Value(0.1)],\n\t\topacities: [new Animated.Value(1), new Animated.Value(1)]\n\t};\n\ttimers = [];\n\n\tcomponentDidMount() {\n\t\tthis.state.scales.forEach((item, i) => {\n\t\t\tconst id = setTimeout(() => {\n\t\t\t\tthis._animation(i)\n\t\t\t}, i * 1200);\n\t\t\tthis.timers.push(id);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unmounted = true;\n\t\tthis.timers.forEach((id) => {\n\t\t\tclearTimeout(id);\n\t\t});\n\t}\n\n\t_animation = (i) => {\n\t\tAnimated.parallel([\n\t\t\tAnimated.timing(this.state.scales[i], { toValue: 1, duration: 1600 }),\n\t\t\tAnimated.timing(this.state.opacities[i], { toValue: 0, duration: 1600, delay: 800 })\n\t\t]).start(() => {\n\t\t\tif (!this.unmounted) {\n\t\t\t\tthis.state.scales[i].setValue(0.1);\n\t\t\t\tthis.state.opacities[i].setValue(1);\n\t\t\t\tthis._animation(i);\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { color, size, strokeWidth } = this.props;\n\t\tconst { scales, opacities } = this.state;\n\t\treturn (\n\t\t\t<Surface width={size + strokeWidth} height={size + strokeWidth}>\n\t\t\t\t{scales.map((item, i) => (\n\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tradius={size}\n\t\t\t\t\t\tstroke={color}\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tscale={scales[i]}\n\t\t\t\t\t\topacity={opacities[i]}\n\t\t\t\t\t\tx={(size + strokeWidth) / 2}\n\t\t\t\t\t\ty={(size + strokeWidth) / 2}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Surface>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}