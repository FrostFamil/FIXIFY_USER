{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-modal-selector/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport styles from \"./style\";\nvar ViewPropTypes = RNViewPropTypes || View.propTypes;\nvar componentIndex = 0;\nvar propTypes = {\n  data: PropTypes.array,\n  onChange: PropTypes.func,\n  onModalOpen: PropTypes.func,\n  onModalClose: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  labelExtractor: PropTypes.func,\n  visible: PropTypes.bool,\n  closeOnChange: PropTypes.bool,\n  initValue: PropTypes.string,\n  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\n  style: ViewPropTypes.style,\n  selectStyle: ViewPropTypes.style,\n  selectTextStyle: Text.propTypes.style,\n  optionStyle: ViewPropTypes.style,\n  optionTextStyle: Text.propTypes.style,\n  optionContainerStyle: ViewPropTypes.style,\n  sectionStyle: ViewPropTypes.style,\n  childrenContainerStyle: ViewPropTypes.style,\n  touchableStyle: ViewPropTypes.style,\n  touchableActiveOpacity: PropTypes.number,\n  sectionTextStyle: Text.propTypes.style,\n  selectedItemTextStyle: Text.propTypes.style,\n  cancelContainerStyle: ViewPropTypes.style,\n  cancelStyle: ViewPropTypes.style,\n  cancelTextStyle: Text.propTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  initValueTextStyle: Text.propTypes.style,\n  cancelText: PropTypes.string,\n  disabled: PropTypes.bool,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),\n  keyboardShouldPersistTaps: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  backdropPressToClose: PropTypes.bool,\n  openButtonContainerAccessible: PropTypes.bool,\n  listItemAccessible: PropTypes.bool,\n  cancelButtonAccessible: PropTypes.bool,\n  scrollViewAccessible: PropTypes.bool,\n  scrollViewAccessibilityLabel: PropTypes.string,\n  cancelButtonAccessibilityLabel: PropTypes.string,\n  passThruProps: PropTypes.object,\n  selectTextPassThruProps: PropTypes.object,\n  optionTextPassThruProps: PropTypes.object,\n  modalOpenerHitSlop: PropTypes.object,\n  customSelector: PropTypes.node,\n  selectedKey: PropTypes.any\n};\nvar defaultProps = {\n  data: [],\n  onChange: function onChange() {},\n  onModalOpen: function onModalOpen() {},\n  onModalClose: function onModalClose() {},\n  keyExtractor: function keyExtractor(item) {\n    return item.key;\n  },\n  labelExtractor: function labelExtractor(item) {\n    return item.label;\n  },\n  componentExtractor: function componentExtractor(item) {\n    return item.component;\n  },\n  visible: false,\n  closeOnChange: true,\n  initValue: 'Select me!',\n  animationType: 'slide',\n  style: {},\n  selectStyle: {},\n  selectTextStyle: {},\n  optionStyle: {},\n  optionTextStyle: {},\n  optionContainerStyle: {},\n  sectionStyle: {},\n  childrenContainerStyle: {},\n  touchableStyle: {},\n  touchableActiveOpacity: 0.2,\n  sectionTextStyle: {},\n  selectedItemTextStyle: {},\n  cancelContainerStyle: {},\n  cancelStyle: {},\n  cancelTextStyle: {},\n  overlayStyle: {},\n  initValueTextStyle: {},\n  cancelText: 'cancel',\n  disabled: false,\n  supportedOrientations: ['portrait', 'landscape'],\n  keyboardShouldPersistTaps: 'always',\n  backdropPressToClose: false,\n  openButtonContainerAccessible: false,\n  listItemAccessible: false,\n  cancelButtonAccessible: false,\n  scrollViewAccessible: false,\n  scrollViewAccessibilityLabel: undefined,\n  cancelButtonAccessibilityLabel: undefined,\n  passThruProps: {},\n  selectTextPassThruProps: {},\n  optionTextPassThruProps: {},\n  modalOpenerHitSlop: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  customSelector: undefined,\n  selectedKey: ''\n};\n\nvar ModalSelector = function (_React$Component) {\n  _inherits(ModalSelector, _React$Component);\n\n  function ModalSelector(props) {\n    var _this;\n\n    _classCallCheck(this, ModalSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalSelector).call(this, props));\n\n    _this.validateSelectedKey = function (key) {\n      var selectedItem = _this.props.data.filter(function (item) {\n        return _this.props.keyExtractor(item) === key;\n      });\n\n      var selectedLabel = selectedItem.length > 0 ? _this.props.labelExtractor(selectedItem[0]) : _this.props.initValue;\n      var selectedKey = selectedItem.length > 0 ? key : undefined;\n      return {\n        label: selectedLabel,\n        key: selectedKey\n      };\n    };\n\n    _this.onChange = function (item) {\n      if (Platform.OS === 'android' || Modal.propTypes !== undefined && !Modal.propTypes.onDismiss) {\n        _this.props.onChange(item);\n      }\n\n      _this.setState({\n        selected: _this.props.labelExtractor(item),\n        changedItem: item\n      }, function () {\n        if (_this.props.closeOnChange) _this.close(item);\n      });\n    };\n\n    _this.close = function (item) {\n      _this.props.onModalClose(item);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.open = function () {\n      _this.props.onModalOpen();\n\n      _this.setState({\n        modalVisible: true,\n        changedItem: undefined\n      });\n    };\n\n    _this.renderSection = function (section) {\n      var optionComponent = _this.props.componentExtractor(section);\n\n      var component = optionComponent || React.createElement(Text, {\n        style: [styles.sectionTextStyle, _this.props.sectionTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        }\n      }, _this.props.labelExtractor(section));\n      return React.createElement(View, {\n        key: _this.props.keyExtractor(section),\n        style: [styles.sectionStyle, _this.props.sectionStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      }, component);\n    };\n\n    _this.renderOption = function (option, isLastItem, isFirstItem) {\n      var optionComponent = _this.props.componentExtractor(option);\n\n      var optionLabel = _this.props.labelExtractor(option);\n\n      var isSelectedItem = optionLabel === _this.state.selected;\n      var component = optionComponent || React.createElement(Text, _extends({\n        style: [styles.optionTextStyle, _this.props.optionTextStyle, isSelectedItem && _this.props.selectedItemTextStyle]\n      }, _this.props.optionTextPassThruProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      }), optionLabel);\n      return React.createElement(TouchableOpacity, _extends({\n        key: _this.props.keyExtractor(option),\n        onPress: function onPress() {\n          return _this.onChange(option);\n        },\n        activeOpacity: _this.props.touchableActiveOpacity,\n        accessible: _this.props.listItemAccessible,\n        accessibilityLabel: option.accessibilityLabel || undefined,\n        importantForAccessibility: isFirstItem\n      }, _this.props.passThruProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        }\n      }), React.createElement(View, {\n        style: [styles.optionStyle, _this.props.optionStyle, isLastItem && {\n          borderBottomWidth: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        }\n      }, component));\n    };\n\n    _this.renderOptionList = function () {\n      var options = _this.props.data.map(function (item, index) {\n        if (item.section) {\n          return _this.renderSection(item);\n        }\n\n        return _this.renderOption(item, index === _this.props.data.length - 1, index === 0);\n      });\n\n      var Overlay = View;\n      var overlayProps = {\n        style: {\n          flex: 1\n        }\n      };\n\n      if (_this.props.backdropPressToClose) {\n        Overlay = TouchableWithoutFeedback;\n        overlayProps = {\n          key: \"modalSelector\" + componentIndex++,\n          accessible: false,\n          onPress: _this.close\n        };\n      }\n\n      return React.createElement(Overlay, _extends({}, overlayProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        }\n      }), React.createElement(View, {\n        style: [styles.overlayStyle, _this.props.overlayStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        }\n      }, React.createElement(View, {\n        style: [styles.optionContainer, _this.props.optionContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        }\n      }, React.createElement(ScrollView, {\n        keyboardShouldPersistTaps: _this.props.keyboardShouldPersistTaps,\n        accessible: _this.props.scrollViewAccessible,\n        accessibilityLabel: _this.props.scrollViewAccessibilityLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingHorizontal: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, options))), React.createElement(View, {\n        style: [styles.cancelContainer, _this.props.cancelContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this.close,\n        activeOpacity: _this.props.touchableActiveOpacity,\n        accessible: _this.props.cancelButtonAccessible,\n        accessibilityLabel: _this.props.cancelButtonAccessibilityLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        }\n      }, React.createElement(View, {\n        style: [styles.cancelStyle, _this.props.cancelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        }\n      }, React.createElement(Text, {\n        style: [styles.cancelTextStyle, _this.props.cancelTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      }, _this.props.cancelText))))));\n    };\n\n    _this.renderChildren = function () {\n      if (_this.props.children) {\n        return _this.props.children;\n      }\n\n      var initSelectStyle = _this.props.initValue === _this.state.selected ? [styles.initValueTextStyle, _this.props.initValueTextStyle] : [styles.selectTextStyle, _this.props.selectTextStyle];\n      return React.createElement(View, {\n        style: [styles.selectStyle, _this.props.selectStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        }\n      }, React.createElement(Text, _extends({\n        style: initSelectStyle\n      }, _this.props.selectTextPassThruProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        }\n      }), _this.state.selected));\n    };\n\n    var _selectedItem = _this.validateSelectedKey(props.selectedKey);\n\n    _this.state = {\n      modalVisible: props.visible,\n      selected: _selectedItem.label,\n      cancelText: props.cancelText,\n      changedItem: _selectedItem.key\n    };\n    return _this;\n  }\n\n  _createClass(ModalSelector, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newState = {};\n      var doUpdate = false;\n\n      if (prevProps.initValue !== this.props.initValue) {\n        newState.selected = this.props.initValue;\n        doUpdate = true;\n      }\n\n      if (prevProps.visible !== this.props.visible) {\n        newState.modalVisible = this.props.visible;\n        doUpdate = true;\n      }\n\n      if (prevProps.selectedKey !== this.props.selectedKey || prevProps.data !== this.props.data) {\n        var selectedItem = this.validateSelectedKey(this.props.selectedKey);\n        newState.selected = selectedItem.label;\n        newState.changedItem = selectedItem.key;\n        doUpdate = true;\n      }\n\n      if (doUpdate) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"getSelectedItem\",\n    value: function getSelectedItem() {\n      return this.state.changedItem;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dp = React.createElement(Modal, {\n        transparent: true,\n        ref: function ref(element) {\n          return _this2.model = element;\n        },\n        supportedOrientations: this.props.supportedOrientations,\n        visible: this.state.modalVisible,\n        onRequestClose: this.close,\n        animationType: this.props.animationType,\n        onDismiss: function onDismiss() {\n          return _this2.state.changedItem && _this2.props.onChange(_this2.state.changedItem);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        }\n      }, this.renderOptionList());\n      return React.createElement(View, _extends({\n        style: this.props.style\n      }, this.props.passThruProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        }\n      }), dp, this.props.customSelector ? this.props.customSelector : React.createElement(TouchableOpacity, {\n        hitSlop: this.props.modalOpenerHitSlop,\n        activeOpacity: this.props.touchableActiveOpacity,\n        style: this.props.touchableStyle,\n        onPress: this.open,\n        disabled: this.props.disabled,\n        accessible: this.props.openButtonContainerAccessible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        }\n      }, React.createElement(View, {\n        style: this.props.childrenContainerStyle,\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        }\n      }, this.renderChildren())));\n    }\n  }]);\n\n  return ModalSelector;\n}(React.Component);\n\nexport { ModalSelector as default };\nModalSelector.propTypes = propTypes;\nModalSelector.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-modal-selector/index.js"],"names":["React","PropTypes","styles","ViewPropTypes","RNViewPropTypes","View","propTypes","componentIndex","data","array","onChange","func","onModalOpen","onModalClose","keyExtractor","labelExtractor","visible","bool","closeOnChange","initValue","string","animationType","oneOf","style","selectStyle","selectTextStyle","Text","optionStyle","optionTextStyle","optionContainerStyle","sectionStyle","childrenContainerStyle","touchableStyle","touchableActiveOpacity","number","sectionTextStyle","selectedItemTextStyle","cancelContainerStyle","cancelStyle","cancelTextStyle","overlayStyle","initValueTextStyle","cancelText","disabled","supportedOrientations","arrayOf","keyboardShouldPersistTaps","oneOfType","backdropPressToClose","openButtonContainerAccessible","listItemAccessible","cancelButtonAccessible","scrollViewAccessible","scrollViewAccessibilityLabel","cancelButtonAccessibilityLabel","passThruProps","object","selectTextPassThruProps","optionTextPassThruProps","modalOpenerHitSlop","customSelector","node","selectedKey","any","defaultProps","item","key","label","componentExtractor","component","undefined","top","bottom","left","right","ModalSelector","props","validateSelectedKey","selectedItem","filter","selectedLabel","length","Platform","OS","Modal","onDismiss","setState","selected","changedItem","close","modalVisible","open","renderSection","section","optionComponent","renderOption","option","isLastItem","isFirstItem","optionLabel","isSelectedItem","state","accessibilityLabel","borderBottomWidth","renderOptionList","options","map","index","Overlay","overlayProps","flex","TouchableWithoutFeedback","accessible","onPress","optionContainer","paddingHorizontal","cancelContainer","renderChildren","children","initSelectStyle","prevProps","prevState","newState","doUpdate","dp","element","model","Component"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    View,\r\n    Modal,\r\n    Text,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    Platform,\r\n    ViewPropTypes as RNViewPropTypes,\r\n} from 'react-native';\r\n\r\nimport styles from './style';\r\n\r\nconst ViewPropTypes = RNViewPropTypes || View.propTypes;\r\n\r\nlet componentIndex = 0;\r\n\r\nconst propTypes = {\r\n    data:                           PropTypes.array,\r\n    onChange:                       PropTypes.func,\r\n    onModalOpen:                    PropTypes.func,\r\n    onModalClose:                   PropTypes.func,\r\n    keyExtractor:                   PropTypes.func,\r\n    labelExtractor:                 PropTypes.func,\r\n    visible:                        PropTypes.bool,\r\n    closeOnChange:                  PropTypes.bool,\r\n    initValue:                      PropTypes.string,\r\n    animationType:                  PropTypes.oneOf(['none', 'slide', 'fade']),\r\n    style:                          ViewPropTypes.style,\r\n    selectStyle:                    ViewPropTypes.style,\r\n    selectTextStyle:                Text.propTypes.style,\r\n    optionStyle:                    ViewPropTypes.style,\r\n    optionTextStyle:                Text.propTypes.style,\r\n    optionContainerStyle:           ViewPropTypes.style,\r\n    sectionStyle:                   ViewPropTypes.style,\r\n    childrenContainerStyle:         ViewPropTypes.style,\r\n    touchableStyle:                 ViewPropTypes.style,\r\n    touchableActiveOpacity:         PropTypes.number,\r\n    sectionTextStyle:               Text.propTypes.style,\r\n    selectedItemTextStyle:          Text.propTypes.style,\r\n    cancelContainerStyle:           ViewPropTypes.style,\r\n    cancelStyle:                    ViewPropTypes.style,\r\n    cancelTextStyle:                Text.propTypes.style,\r\n    overlayStyle:                   ViewPropTypes.style,\r\n    initValueTextStyle:             Text.propTypes.style,\r\n    cancelText:                     PropTypes.string,\r\n    disabled:                       PropTypes.bool,\r\n    supportedOrientations:          PropTypes.arrayOf(\r\n                                      PropTypes.oneOf([\r\n                                        'portrait',\r\n                                        'portrait-upside-down',\r\n                                        'landscape',\r\n                                        'landscape-left',\r\n                                        'landscape-right',\r\n                                      ]),\r\n                                    ),\r\n    keyboardShouldPersistTaps:      PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    backdropPressToClose:           PropTypes.bool,\r\n    openButtonContainerAccessible:  PropTypes.bool,\r\n    listItemAccessible:             PropTypes.bool,\r\n    cancelButtonAccessible:         PropTypes.bool,\r\n    scrollViewAccessible:           PropTypes.bool,\r\n    scrollViewAccessibilityLabel:   PropTypes.string,\r\n    cancelButtonAccessibilityLabel: PropTypes.string,\r\n    passThruProps:                  PropTypes.object,\r\n    selectTextPassThruProps:        PropTypes.object,\r\n    optionTextPassThruProps:        PropTypes.object,\r\n    modalOpenerHitSlop:             PropTypes.object,\r\n    customSelector:                 PropTypes.node,\r\n    selectedKey:                    PropTypes.any,\r\n};\r\n\r\nconst defaultProps = {\r\n    data:                           [],\r\n    onChange:                       () => {},\r\n    onModalOpen:                    () => {},\r\n    onModalClose:                   () => {},\r\n    keyExtractor:                   (item) => item.key,\r\n    labelExtractor:                 (item) => item.label,\r\n    componentExtractor:             (item) => item.component,\r\n    visible:                        false,\r\n    closeOnChange:                  true,\r\n    initValue:                      'Select me!',\r\n    animationType:                  'slide',\r\n    style:                          {},\r\n    selectStyle:                    {},\r\n    selectTextStyle:                {},\r\n    optionStyle:                    {},\r\n    optionTextStyle:                {},\r\n    optionContainerStyle:           {},\r\n    sectionStyle:                   {},\r\n    childrenContainerStyle:         {},\r\n    touchableStyle:                 {},\r\n    touchableActiveOpacity:         0.2,\r\n    sectionTextStyle:               {},\r\n    selectedItemTextStyle:          {},\r\n    cancelContainerStyle:           {},\r\n    cancelStyle:                    {},\r\n    cancelTextStyle:                {},\r\n    overlayStyle:                   {},\r\n    initValueTextStyle:             {},\r\n    cancelText:                     'cancel',\r\n    disabled:                       false,\r\n    supportedOrientations:          ['portrait', 'landscape'],\r\n    keyboardShouldPersistTaps:      'always',\r\n    backdropPressToClose:           false,\r\n    openButtonContainerAccessible:  false,\r\n    listItemAccessible:             false,\r\n    cancelButtonAccessible:         false,\r\n    scrollViewAccessible:           false,\r\n    scrollViewAccessibilityLabel:   undefined,\r\n    cancelButtonAccessibilityLabel: undefined,\r\n    passThruProps:                  {},\r\n    selectTextPassThruProps:        {},\r\n    optionTextPassThruProps:        {},\r\n    modalOpenerHitSlop:             {top: 0, bottom: 0, left: 0, right: 0},\r\n    customSelector:                 undefined,\r\n    selectedKey:                    '',\r\n};\r\n\r\nexport default class ModalSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let selectedItem = this.validateSelectedKey(props.selectedKey);\r\n        this.state = {\r\n            modalVisible:  props.visible,\r\n            selected:      selectedItem.label,\r\n            cancelText:    props.cancelText,\r\n            changedItem:   selectedItem.key,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let newState = {};\r\n        let doUpdate = false;\r\n        if (prevProps.initValue !== this.props.initValue) {\r\n            newState.selected = this.props.initValue;\r\n            doUpdate = true;\r\n        }\r\n        if (prevProps.visible !== this.props.visible) {\r\n            newState.modalVisible = this.props.visible;\r\n            doUpdate = true;\r\n        }\r\n        if (prevProps.selectedKey !== this.props.selectedKey || prevProps.data !== this.props.data) {\r\n            let selectedItem = this.validateSelectedKey(this.props.selectedKey);\r\n            newState.selected = selectedItem.label;\r\n            newState.changedItem = selectedItem.key;\r\n            doUpdate = true;\r\n        }\r\n        if (doUpdate) {\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    validateSelectedKey = (key) => {\r\n        let selectedItem = this.props.data.filter((item) => this.props.keyExtractor(item) === key);\r\n        let selectedLabel = selectedItem.length > 0 ? this.props.labelExtractor(selectedItem[0]) : this.props.initValue;\r\n        let selectedKey = selectedItem.length > 0 ? key : undefined;\r\n        return {label: selectedLabel, key: selectedKey}\r\n    }\r\n\r\n    onChange = (item) => {\r\n        if (Platform.OS === 'android' || (Modal.propTypes !== undefined && !Modal.propTypes.onDismiss)) { // don't know if this will work for previous version, please check!\r\n            // RN >= 0.50 on iOS comes with the onDismiss prop for Modal which solves RN issue #10471\r\n            this.props.onChange(item);\r\n        }\r\n        this.setState({ selected: this.props.labelExtractor(item), changedItem: item }, () => {\r\n          if (this.props.closeOnChange)\r\n            this.close(item);\r\n        });\r\n    }\r\n\r\n    getSelectedItem() {\r\n      return this.state.changedItem;\r\n    }\r\n\r\n    close = (item) => {\r\n        this.props.onModalClose(item);\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n    }\r\n\r\n    open = () => {\r\n        this.props.onModalOpen();\r\n        this.setState({\r\n            modalVisible: true,\r\n            changedItem:  undefined,\r\n        });\r\n    }\r\n\r\n    renderSection = (section) => {\r\n        const optionComponent = this.props.componentExtractor(section);\r\n        let component = optionComponent || (\r\n          <Text style={[styles.sectionTextStyle,this.props.sectionTextStyle]}>{this.props.labelExtractor(section)}</Text>\r\n        );\r\n\r\n        return (\r\n            <View key={this.props.keyExtractor(section)} style={[styles.sectionStyle,this.props.sectionStyle]}>\r\n                {component}\r\n            </View>\r\n        );\r\n    }\r\n\r\n    renderOption = (option, isLastItem, isFirstItem) => {\r\n        const optionComponent = this.props.componentExtractor(option);\r\n        const optionLabel = this.props.labelExtractor(option);\r\n        const isSelectedItem = optionLabel === this.state.selected;\r\n\r\n        let component = optionComponent || (\r\n          <Text style={[styles.optionTextStyle,this.props.optionTextStyle,isSelectedItem && this.props.selectedItemTextStyle]} {...this.props.optionTextPassThruProps}>\r\n              {optionLabel}\r\n          </Text>\r\n        );\r\n\r\n        return (\r\n            <TouchableOpacity\r\n              key={this.props.keyExtractor(option)}\r\n              onPress={() => this.onChange(option)}\r\n              activeOpacity={this.props.touchableActiveOpacity}\r\n              accessible={this.props.listItemAccessible}\r\n              accessibilityLabel={option.accessibilityLabel || undefined}\r\n              importantForAccessibility={isFirstItem}\r\n              {...this.props.passThruProps}\r\n            >\r\n                <View style={[styles.optionStyle, this.props.optionStyle, isLastItem && {borderBottomWidth: 0}]}>\r\n                  {component}\r\n                </View>\r\n            </TouchableOpacity>);\r\n    }\r\n\r\n    renderOptionList = () => {\r\n\r\n        let options = this.props.data.map((item, index) => {\r\n            if (item.section) {\r\n                return this.renderSection(item);\r\n            }\r\n            return this.renderOption(item, index === this.props.data.length - 1, index === 0);\r\n        });\r\n\r\n        let Overlay = View;\r\n        let overlayProps = {\r\n            style: {flex:1}\r\n        };\r\n        // Some RN versions have a bug here, so making the property opt-in works around this problem\r\n        if (this.props.backdropPressToClose) {\r\n          Overlay = TouchableWithoutFeedback;\r\n          overlayProps = {\r\n              key: `modalSelector${componentIndex++}`,\r\n              accessible: false,\r\n              onPress: this.close\r\n          };\r\n        }\r\n\r\n        return (\r\n            <Overlay {...overlayProps}>\r\n                <View style={[styles.overlayStyle, this.props.overlayStyle]}>\r\n                    <View style={[styles.optionContainer, this.props.optionContainerStyle]}>\r\n                        <ScrollView keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps} accessible={this.props.scrollViewAccessible} accessibilityLabel={this.props.scrollViewAccessibilityLabel}>\r\n                            <View style={{paddingHorizontal: 10}}>\r\n                                {options}\r\n                            </View>\r\n                        </ScrollView>\r\n                    </View>\r\n                    <View style={[styles.cancelContainer, this.props.cancelContainerStyle]}>\r\n                        <TouchableOpacity onPress={this.close} activeOpacity={this.props.touchableActiveOpacity} accessible={this.props.cancelButtonAccessible} accessibilityLabel={this.props.cancelButtonAccessibilityLabel}>\r\n                            <View style={[styles.cancelStyle, this.props.cancelStyle]}>\r\n                                <Text style={[styles.cancelTextStyle,this.props.cancelTextStyle]}>{this.props.cancelText}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Overlay>);\r\n    }\r\n\r\n    renderChildren = () => {\r\n\r\n        if(this.props.children) {\r\n            return this.props.children;\r\n        }\r\n        let initSelectStyle = this.props.initValue === this.state.selected ?\r\n            [styles.initValueTextStyle, this.props.initValueTextStyle] : [styles.selectTextStyle, this.props.selectTextStyle];\r\n        return (\r\n            <View style={[styles.selectStyle, this.props.selectStyle]}>\r\n                <Text style={initSelectStyle} {...this.props.selectTextPassThruProps}>{this.state.selected}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const dp = (\r\n            <Modal\r\n                transparent={true}\r\n                ref={element => this.model = element}\r\n                supportedOrientations={this.props.supportedOrientations}\r\n                visible={this.state.modalVisible}\r\n                onRequestClose={this.close}\r\n                animationType={this.props.animationType}\r\n                onDismiss={() => this.state.changedItem && this.props.onChange(this.state.changedItem)}\r\n            >\r\n                {this.renderOptionList()}\r\n            </Modal>\r\n        );\r\n\r\n        return (\r\n            <View style={this.props.style} {...this.props.passThruProps}>\r\n                {dp}\r\n                {this.props.customSelector ?\r\n                    this.props.customSelector\r\n                    :\r\n                    <TouchableOpacity\r\n                        hitSlop={this.props.modalOpenerHitSlop}\r\n                        activeOpacity={this.props.touchableActiveOpacity}\r\n                        style={this.props.touchableStyle}\r\n                        onPress={this.open}\r\n                        disabled={this.props.disabled}\r\n                        accessible={this.props.openButtonContainerAccessible}\r\n                    >\r\n                        <View style={this.props.childrenContainerStyle} pointerEvents=\"none\">\r\n                            {this.renderChildren()}\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nModalSelector.propTypes = propTypes;\r\nModalSelector.defaultProps = defaultProps;\r\n"]},"metadata":{},"sourceType":"module"}