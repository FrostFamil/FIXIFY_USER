{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Orders.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Header, Left, Icon, Body, Title, Right } from 'native-base';\nimport { Ionicons, FontAwesome } from '@expo/vector-icons';\nimport OrderList from \"../mocks/OrderList\";\nimport getAllPendingRequests from \"../Requests/getAllPendingRequests\";\nimport getAllNotAcceptedRequest from \"../Requests/getAllNotAcceptedRequest\";\nimport getAllAcceptedRequests from \"../Requests/getAllAcceptedRequests\";\nimport getAllFinishedRequests from \"../Requests/getAllFinishedRequests\";\nimport userGetsHisCurrentRequest from \"../Requests/userGetsHisCurrentRequest\";\nimport userSeeFixer from \"../Requests/userSeeFixer\";\nimport { getFixerProfileRequest } from \"../Requests/profileRequest\";\n\nvar Orders = function (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pendingOrders: [],\n      acceptedOrders: [],\n      finishedOrders: [],\n      notAcceptedOrders: [],\n      orderIndex: '',\n      creator: global.userId\n    };\n\n    _this.refreshPressed = function () {\n      var creator = _this.state.creator;\n      getAllNotAcceptedRequest(creator).then(function (res) {\n        _this.setState({\n          notAcceptedOrders: res.requests\n        });\n      });\n      getAllPendingRequests(creator).then(function (res) {\n        _this.setState({\n          pendingOrders: res.requests\n        });\n      });\n      getAllAcceptedRequests(creator).then(function (res) {\n        _this.setState({\n          acceptedOrders: res.requests\n        });\n      });\n      getAllFinishedRequests(creator).then(function (res) {\n        _this.setState({\n          finishedOrders: res.requests\n        });\n      });\n    };\n\n    _this.openMapDetails = function () {\n      var creator = global.userId;\n      userGetsHisCurrentRequest(creator).then(function (res) {\n        global.requestIndex = res.requests._id;\n        global.fixerId = res.requests.acceptor;\n        global.problem = res.requests.problem;\n        global.serviceType = res.requests.serviceType;\n        global.latitudeFrom = res.requests.latitudeFrom;\n        global.longitudeFrom = res.requests.longitudeFrom;\n        global.schedule = res.requests.scheduled;\n        global.payment = res.requests.paymentType;\n        global.address = res.requests.address;\n        global.price = res.requests.price;\n      }).then(function () {\n        userSeeFixer(global.fixerId).then(function (res) {\n          global.latitudeFixer = res.fixer.latitude;\n          global.longitudeFixer = res.fixer.longitude;\n        }).then(function () {\n          getFixerProfileRequest(global.fixerId).then(function (res) {\n            global.fixerFirstName = res.firstName;\n            global.fixerLastName = res.lastName;\n            global.fixerEmail = res.email;\n          }).then(function () {\n            _this.props.navigation.navigate(\"orderMap\");\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var creator = this.state.creator;\n      getAllNotAcceptedRequest(creator).then(function (res) {\n        _this2.setState({\n          notAcceptedOrders: res.requests\n        });\n      });\n      getAllPendingRequests(creator).then(function (res) {\n        _this2.setState({\n          pendingOrders: res.requests\n        });\n      });\n      getAllAcceptedRequests(creator).then(function (res) {\n        _this2.setState({\n          acceptedOrders: res.requests\n        });\n      });\n      getAllFinishedRequests(creator).then(function (res) {\n        _this2.setState({\n          finishedOrders: res.requests\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, React.createElement(Header, {\n        style: {\n          backgroundColor: \"#97387a\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, React.createElement(Left, {\n        style: {\n          left: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, React.createElement(Icon, {\n        name: \"menu\",\n        onPress: function onPress() {\n          return _this3.props.navigation.openDrawer();\n        },\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        }\n      })), React.createElement(Body, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }, React.createElement(Title, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, \"Orders\")), React.createElement(Right, {\n        style: {\n          right: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, React.createElement(FontAwesome, {\n        onPress: function onPress() {\n          return _this3.refreshPressed();\n        },\n        name: \"refresh\",\n        style: {\n          color: 'white',\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }))), React.createElement(OrderList, {\n        pendingOrders: this.state.pendingOrders,\n        notAcceptedOrders: this.state.notAcceptedOrders,\n        acceptedOrders: this.state.acceptedOrders,\n        finishedOrders: this.state.finishedOrders,\n        details: function details() {\n          return _this3.openMapDetails();\n        },\n        updateMap: function updateMap() {\n          return _this3.refreshMap();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        }\n      }));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nOrders.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var state = navigation.state;\n  return {\n    drawerIcon: function drawerIcon() {\n      return React.createElement(Ionicons, {\n        name: \"ios-time\",\n        size: 29,\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      });\n    },\n    drawerLabel: function drawerLabel() {\n      return React.createElement(Text, {\n        style: {\n          color: 'black',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, \"Orders\");\n    }\n  };\n};\n\nexport { Orders as default };","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Orders.js"],"names":["React","Component","Header","Left","Icon","Body","Title","Right","Ionicons","FontAwesome","OrderList","getAllPendingRequests","getAllNotAcceptedRequest","getAllAcceptedRequests","getAllFinishedRequests","userGetsHisCurrentRequest","userSeeFixer","getFixerProfileRequest","Orders","state","pendingOrders","acceptedOrders","finishedOrders","notAcceptedOrders","orderIndex","creator","global","userId","refreshPressed","then","res","setState","requests","openMapDetails","requestIndex","_id","fixerId","acceptor","problem","serviceType","latitudeFrom","longitudeFrom","schedule","scheduled","payment","paymentType","address","price","latitudeFixer","fixer","latitude","longitudeFixer","longitude","fixerFirstName","firstName","fixerLastName","lastName","fixerEmail","email","props","navigation","navigate","backgroundColor","left","openDrawer","color","flex","right","fontSize","refreshMap","navigationOptions","drawerIcon","drawerLabel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {View,Text} from \"react-native\";\r\nimport {Header, Left, Icon, Body, Title, Right} from 'native-base';\r\nimport {Ionicons, FontAwesome} from '@expo/vector-icons';\r\nimport OrderList from '../mocks/OrderList';\r\nimport getAllPendingRequests from \"../Requests/getAllPendingRequests\";\r\nimport getAllNotAcceptedRequest from '../Requests/getAllNotAcceptedRequest';\r\nimport getAllAcceptedRequests from '../Requests/getAllAcceptedRequests';\r\nimport getAllFinishedRequests from '../Requests/getAllFinishedRequests';\r\nimport userGetsHisCurrentRequest from '../Requests/userGetsHisCurrentRequest';\r\nimport userSeeFixer from \"../Requests/userSeeFixer\";\r\nimport { getFixerProfileRequest } from '../Requests/profileRequest';\r\n\r\nexport default class Orders extends Component {\r\n\r\n  static navigationOptions = ({navigation}) => {\r\n    const {state} = navigation;\r\n\r\n    return {\r\n      drawerIcon: () => (\r\n        <Ionicons name=\"ios-time\" size={29} style={{ color: 'black' }} />\r\n      ),\r\n      drawerLabel: () => (\r\n        <Text style={{ color: 'black', fontSize: 20 }}>Orders</Text>  \r\n      ),\r\n    }\r\n  }\r\n\r\n  state={\r\n    pendingOrders: [],\r\n    acceptedOrders: [],\r\n    finishedOrders: [],\r\n    notAcceptedOrders: [],\r\n    orderIndex: '',\r\n    creator: global.userId\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {creator} = this.state;\r\n\r\n    getAllNotAcceptedRequest(creator).then(res => {\r\n      this.setState({ notAcceptedOrders: res.requests}); \r\n    })\r\n\r\n    getAllPendingRequests(creator).then(res => {\r\n      this.setState({ pendingOrders: res.requests});     \r\n    });\r\n\r\n    getAllAcceptedRequests(creator).then(res => {\r\n      this.setState({ acceptedOrders: res.requests});     \r\n    });\r\n\r\n    getAllFinishedRequests(creator).then(res => {\r\n      this.setState({ finishedOrders: res.requests});     \r\n    });\r\n  }\r\n\r\n  refreshPressed = () => {\r\n    const {creator} = this.state;\r\n\r\n    getAllNotAcceptedRequest(creator).then(res => {\r\n      this.setState({ notAcceptedOrders: res.requests}); \r\n    });\r\n\r\n    getAllPendingRequests(creator).then(res => {\r\n      this.setState({ pendingOrders: res.requests});     \r\n    });\r\n\r\n    getAllAcceptedRequests(creator).then(res => {\r\n      this.setState({ acceptedOrders: res.requests});  \r\n    });\r\n\r\n    getAllFinishedRequests(creator).then(res => {\r\n      this.setState({ finishedOrders: res.requests});     \r\n    });\r\n  }\r\n\r\n  openMapDetails = () => {\r\n  const creator = global.userId;\r\n\r\n  userGetsHisCurrentRequest(creator).then(res => {\r\n    global.requestIndex = res.requests._id;\r\n    global.fixerId = res.requests.acceptor;\r\n    global.problem = res.requests.problem;\r\n    global.serviceType = res.requests.serviceType;\r\n    global.latitudeFrom = res.requests.latitudeFrom;\r\n    global.longitudeFrom = res.requests.longitudeFrom;\r\n    global.schedule = res.requests.scheduled;\r\n    global.payment = res.requests.paymentType;\r\n    global.address = res.requests.address;\r\n    global.price = res.requests.price;\r\n  }).then(() => {\r\n    userSeeFixer(global.fixerId).then(res => {\r\n      global.latitudeFixer = res.fixer.latitude;\r\n      global.longitudeFixer = res.fixer.longitude;\r\n    }).then(() => {\r\n      getFixerProfileRequest(global.fixerId).then(res => {\r\n        global.fixerFirstName = res.firstName;\r\n        global.fixerLastName = res.lastName; \r\n        global.fixerEmail = res.email;\r\n      }).then(() => {\r\n        this.props.navigation.navigate(\"orderMap\")\r\n      })\r\n    })\r\n  })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Header style={{ backgroundColor: \"#97387a\"}}>\r\n          <Left style={{ left: 5}}>\r\n            <Icon  name='menu' onPress={() => this.props.navigation.openDrawer()} style={{ color: 'white'}} />\r\n          </Left>\r\n          <Body style={{ flex: 1}}>\r\n            <Title style={{ color: 'white'}}>Orders</Title>\r\n          </Body>\r\n          <Right style={{ right: 5}}>\r\n            <FontAwesome onPress={() => this.refreshPressed()} name='refresh' style={{ color: 'white', fontSize: 25}} />\r\n          </Right>\r\n        </Header>\r\n        \r\n        <OrderList \r\n        pendingOrders={this.state.pendingOrders} \r\n        notAcceptedOrders={this.state.notAcceptedOrders} \r\n        acceptedOrders={this.state.acceptedOrders} \r\n        finishedOrders={this.state.finishedOrders} \r\n        details={() => this.openMapDetails()}  \r\n        updateMap={() => this.refreshMap()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}