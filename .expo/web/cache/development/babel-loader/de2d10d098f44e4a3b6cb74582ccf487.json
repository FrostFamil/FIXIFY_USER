{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-indicator/lib/loader/RotationHoleLoader.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ART } from \"react-native-web/dist/index\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport AnimatedCircle from \"../animated/AnimatedCircle\";\nimport { color } from \"../const\";\nvar Surface = ART.Surface,\n    Group = ART.Group;\n\nvar RotationHoleLoader = function (_React$PureComponent) {\n  _inherits(RotationHoleLoader, _React$PureComponent);\n\n  function RotationHoleLoader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RotationHoleLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RotationHoleLoader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      degree: new Animated.Value(0)\n    };\n\n    _this._animation = function () {\n      Animated.sequence([Animated.timing(_this.state.degree, {\n        toValue: 360,\n        duration: _this.props.rotationSpeed,\n        easing: Easing.linear\n      })]).start(function () {\n        if (!_this.unmounted) {\n          _this.state.degree.setValue(0);\n\n          _this._animation();\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RotationHoleLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color,\n          strokeWith = _this$props.strokeWith;\n      var degree = this.state.degree.interpolate({\n        inputRange: [0, 360],\n        outputRange: ['0deg', '360deg']\n      });\n      return React.createElement(Animated.View, {\n        style: {\n          transform: [{\n            rotate: degree\n          }],\n          backgroundColor: 'rgba(0,0,0,0)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(Surface, {\n        width: size + strokeWith * 2,\n        height: size + strokeWith * 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, React.createElement(AnimatedCircle, {\n        stroke: color,\n        opacity: 0.3,\n        strokeWidth: strokeWith,\n        radius: size,\n        x: size / 2 + strokeWith,\n        y: size / 2 + strokeWith,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), React.createElement(AnimatedCircle, {\n        fill: color,\n        radius: strokeWith,\n        x: size / 2 + strokeWith,\n        y: strokeWith,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }))));\n    }\n  }]);\n\n  return RotationHoleLoader;\n}(React.PureComponent);\n\nRotationHoleLoader.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string,\n  strokeWith: PropTypes.number,\n  rotationSpeed: PropTypes.number\n};\nRotationHoleLoader.defaultProps = {\n  size: 40,\n  color: color,\n  rotationSpeed: 800,\n  strokeWith: 8\n};\nexport { RotationHoleLoader as default };","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/node_modules/react-native-indicator/lib/loader/RotationHoleLoader.js"],"names":["React","PropTypes","ART","AnimatedCircle","color","Surface","Group","RotationHoleLoader","state","degree","Animated","Value","_animation","sequence","timing","toValue","duration","props","rotationSpeed","easing","Easing","linear","start","unmounted","setValue","size","strokeWith","interpolate","inputRange","outputRange","transform","rotate","backgroundColor","PureComponent","propTypes","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ART, Animated, Easing } from 'react-native';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nconst { Surface, Group } = ART;\n\nexport default class RotationHoleLoader extends React.PureComponent {\n\tstatic propTypes = {\n\t\tsize: PropTypes.number,\n\t\tcolor: PropTypes.string,\n\t\tstrokeWith: PropTypes.number,\n\t\trotationSpeed: PropTypes.number\n\t};\n\n\tstatic defaultProps = {\n\t\tsize: 40,\n\t\tcolor,\n\t\trotationSpeed: 800,\n\t\tstrokeWith: 8\n\t};\n\n\tstate = {\n\t\tdegree: new Animated.Value(0)\n\t};\n\n\tcomponentDidMount() {\n\t\tthis._animation();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unmounted = true;\n\t}\n\n\t_animation = () => {\n\t\tAnimated.sequence([\n\t\t\tAnimated.timing(this.state.degree, {\n\t\t\t\ttoValue: 360,\n\t\t\t\tduration: this.props.rotationSpeed,\n\t\t\t\teasing: Easing.linear\n\t\t\t})\n\t\t]).start(() => {\n\t\t\tif (!this.unmounted) {\n\t\t\t\tthis.state.degree.setValue(0);\n\t\t\t\tthis._animation();\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { size, color, strokeWith } = this.props;\n\t\tconst degree = this.state.degree.interpolate({\n\t\t\tinputRange: [0, 360],\n\t\t\toutputRange: ['0deg', '360deg']\n\t\t});\n\t\treturn (\n\t\t\t<Animated.View\n\t\t\t\tstyle={{ transform: [{ rotate: degree }], backgroundColor: 'rgba(0,0,0,0)' }}>\n\t\t\t\t<Surface width={size + strokeWith * 2} height={size + strokeWith * 2}>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\t\tstroke={color}\n\t\t\t\t\t\t\topacity={0.3}\n\t\t\t\t\t\t\tstrokeWidth={strokeWith}\n\t\t\t\t\t\t\tradius={size}\n\t\t\t\t\t\t\tx={size / 2 + strokeWith}\n\t\t\t\t\t\t\ty={size / 2 + strokeWith}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\t\tfill={color}\n\t\t\t\t\t\t\tradius={strokeWith}\n\t\t\t\t\t\t\tx={size / 2 + strokeWith}\n\t\t\t\t\t\t\ty={strokeWith}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Group>\n\t\t\t\t</Surface>\n\t\t\t</Animated.View>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}