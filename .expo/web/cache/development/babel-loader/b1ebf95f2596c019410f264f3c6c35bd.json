{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/registerComponents/Text.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as theme from \"../constants/theme\";\n\nvar Typography = function (_Component) {\n  _inherits(Typography, _Component);\n\n  function Typography() {\n    _classCallCheck(this, Typography);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Typography).apply(this, arguments));\n  }\n\n  _createClass(Typography, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          center = _this$props.center,\n          right = _this$props.right,\n          color = _this$props.color,\n          size = _this$props.size,\n          height = _this$props.height,\n          weight = _this$props.weight,\n          spacing = _this$props.spacing,\n          h1 = _this$props.h1,\n          h2 = _this$props.h2,\n          h3 = _this$props.h3,\n          h4 = _this$props.h4,\n          paragraph = _this$props.paragraph,\n          caption = _this$props.caption,\n          medium = _this$props.medium,\n          bold = _this$props.bold,\n          light = _this$props.light,\n          italic = _this$props.italic,\n          button = _this$props.button,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"center\", \"right\", \"color\", \"size\", \"height\", \"weight\", \"spacing\", \"h1\", \"h2\", \"h3\", \"h4\", \"paragraph\", \"caption\", \"medium\", \"bold\", \"light\", \"italic\", \"button\", \"style\", \"children\"]);\n\n      var textStyles = [styles.text, h1 && styles.h1, h2 && styles.h2, h3 && styles.h3, h4 && styles.h4, paragraph && styles.paragraph, paragraph && color === 'gray' && styles.paragraphGray, paragraph && color === 'gray2' && styles.paragraphGray2, caption && styles.caption, caption && medium && styles.captionMedium, button && styles.button, center && styles.center, right && styles.right, color && {\n        color: color\n      }, color && color === 'blue' && styles.blue, color && color === 'lightblue' && styles.lightblue, color && color === 'green' && styles.green, color && color === 'red' && styles.red, color && color === 'yellow' && styles.yellow, color && color === 'teal' && styles.teal, color && color === 'black' && styles.black, color && color === 'black2' && styles.black2, color && color === 'black3' && styles.black3, color && color === 'white' && styles.white, color && color === 'gray' && styles.gray, color && color === 'gray2' && styles.gray2, color && color === 'gray3' && styles.gray3, color && color === 'caption' && styles.caption, size && {\n        fontSize: size\n      }, bold && styles.bold, light && styles.light, height && {\n        lineHeight: height\n      }, weight && {\n        fontWeight: weight\n      }, spacing && {\n        letterSpacing: spacing\n      }, style];\n      return React.createElement(Text, _extends({\n        style: textStyles\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }), children);\n    }\n  }]);\n\n  return Typography;\n}(Component);\n\nexport { Typography as default };\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: theme.sizes.font,\n    color: theme.colors.white\n  },\n  bold: {\n    fontFamily: 'Rubik-Bold'\n  },\n  light: {\n    fontFamily: 'Rubik-Light'\n  },\n  center: {\n    textAlign: 'center'\n  },\n  right: {\n    textAlign: 'right'\n  },\n  blue: {\n    color: theme.colors.blue\n  },\n  lightblue: {\n    color: theme.colors.lightblue\n  },\n  green: {\n    color: theme.colors.green\n  },\n  red: {\n    color: theme.colors.red\n  },\n  yellow: {\n    color: theme.colors.yellow\n  },\n  teal: {\n    color: theme.colors.teal\n  },\n  black: {\n    color: theme.colors.black\n  },\n  black2: {\n    color: theme.colors.black2\n  },\n  black3: {\n    color: theme.colors.black3\n  },\n  white: {\n    color: theme.colors.white\n  },\n  gray: {\n    color: theme.colors.gray\n  },\n  gray2: {\n    color: theme.colors.gray2\n  },\n  gray3: {\n    color: theme.colors.gray3\n  },\n  caption: {\n    color: theme.colors.caption\n  },\n  h1: theme.fonts.h1,\n  h2: theme.fonts.h2,\n  h3: theme.fonts.h3,\n  h4: theme.fonts.h4,\n  paragraph: theme.fonts.paragraph,\n  paragraphGray: theme.fonts.paragraphGray,\n  paragraphGray2: theme.fonts.paragraphGray2,\n  caption: theme.fonts.caption,\n  captionMedium: theme.fonts.captionMedium,\n  button: theme.fonts.button\n});","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/registerComponents/Text.js"],"names":["React","Component","theme","Typography","props","center","right","color","size","height","weight","spacing","h1","h2","h3","h4","paragraph","caption","medium","bold","light","italic","button","style","children","textStyles","styles","text","paragraphGray","paragraphGray2","captionMedium","blue","lightblue","green","red","yellow","teal","black","black2","black3","white","gray","gray2","gray3","fontSize","lineHeight","fontWeight","letterSpacing","StyleSheet","create","sizes","font","colors","fontFamily","textAlign","fonts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, Text } from 'react-native'\r\nimport * as theme from '../constants/theme';\r\n\r\nexport default class Typography extends Component {\r\n  render() {\r\n    const {\r\n      center,\r\n      right,\r\n      color,\r\n      size,\r\n      height,\r\n      weight,\r\n      spacing,\r\n      h1,\r\n      h2,\r\n      h3,\r\n      h4,\r\n      paragraph,\r\n      caption,\r\n      medium,\r\n      bold,\r\n      light,\r\n      italic,\r\n      button,\r\n      style,\r\n      children,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const textStyles = [\r\n      styles.text,\r\n      h1 && styles.h1,\r\n      h2 && styles.h2,\r\n      h3 && styles.h3,\r\n      h4 && styles.h4,\r\n      paragraph && styles.paragraph,\r\n      paragraph && color === 'gray' && styles.paragraphGray,\r\n      paragraph && color === 'gray2' && styles.paragraphGray2,\r\n      caption && styles.caption,\r\n      caption && medium && styles.captionMedium,\r\n      button && styles.button,\r\n      center && styles.center,\r\n      right && styles.right,\r\n      color && { color },\r\n      color && color === 'blue' && styles.blue,\r\n      color && color === 'lightblue' && styles.lightblue,\r\n      color && color === 'green' && styles.green,\r\n      color && color === 'red' && styles.red,\r\n      color && color === 'yellow' && styles.yellow,\r\n      color && color === 'teal' && styles.teal,\r\n      color && color === 'black' && styles.black,\r\n      color && color === 'black2' && styles.black2,\r\n      color && color === 'black3' && styles.black3,\r\n      color && color === 'white' && styles.white,\r\n      color && color === 'gray' && styles.gray,\r\n      color && color === 'gray2' && styles.gray2,\r\n      color && color === 'gray3' && styles.gray3,\r\n      color && color === 'caption' && styles.caption,\r\n      size && { fontSize: size },\r\n      bold && styles.bold,\r\n      light && styles.light,\r\n      height && { lineHeight: height },\r\n      weight && { fontWeight: weight },\r\n      spacing && { letterSpacing: spacing },\r\n      style\r\n    ];\r\n\r\n    return (\r\n      <Text style={textStyles} {...props}>\r\n        {children}\r\n      </Text>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: theme.sizes.font,\r\n    color: theme.colors.white,\r\n  },\r\n  bold: { fontFamily: 'Rubik-Bold' },\r\n  light: { fontFamily: 'Rubik-Light' },\r\n  center: { textAlign: 'center' },\r\n  right: { textAlign: 'right' },\r\n  blue: { color: theme.colors.blue, },\r\n  lightblue: { color: theme.colors.lightblue, },\r\n  green: { color: theme.colors.green, },\r\n  red: { color: theme.colors.red, },\r\n  yellow: { color: theme.colors.yellow, },\r\n  teal: { color: theme.colors.teal, },\r\n  black: { color: theme.colors.black, },\r\n  black2: { color: theme.colors.black2, },\r\n  black3: { color: theme.colors.black3, },\r\n  white: { color: theme.colors.white, },\r\n  gray: { color: theme.colors.gray, },\r\n  gray2: { color: theme.colors.gray2, },\r\n  gray3: { color: theme.colors.gray3, },\r\n  caption: { color: theme.colors.caption, },\r\n  h1: theme.fonts.h1,\r\n  h2: theme.fonts.h2,\r\n  h3: theme.fonts.h3,\r\n  h4: theme.fonts.h4,\r\n  paragraph: theme.fonts.paragraph,\r\n  paragraphGray: theme.fonts.paragraphGray,\r\n  paragraphGray2: theme.fonts.paragraphGray2,\r\n  caption: theme.fonts.caption,\r\n  captionMedium: theme.fonts.captionMedium,\r\n  button: theme.fonts.button,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}