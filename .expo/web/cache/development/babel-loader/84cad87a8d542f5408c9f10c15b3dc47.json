{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/CreditCardCharge.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Button, Text } from \"../registerComponents\";\nimport { CreditCardInput } from \"react-native-credit-card-input\";\nimport { saveUserCard, getCards } from \"../Requests/profileRequest\";\nimport makePayment from \"../Requests/makePayment\";\nimport { Card } from 'react-native-elements';\nimport { Input } from \"../registerComponents\";\nimport { FontAwesome } from '@expo/vector-icons';\n\nvar stripe = require('stripe-client')('pk_test_Umwwh7JNL9kbihbfvhK0lykW00XnLlHQDX');\n\nvar CreditCardCharge = function (_Component) {\n  _inherits(CreditCardCharge, _Component);\n\n  function CreditCardCharge() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreditCardCharge);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreditCardCharge)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      number: '',\n      exp_month: '',\n      exp_year: '',\n      cvc: '',\n      cards: [],\n      openCVCModal: false\n    };\n\n    _this.onChange = function (form) {\n      _this.setState({\n        number: form.values.number.replace(/\\s+/g, ''),\n        exp_month: parseInt(form.values.expiry.substring(0, 2)),\n        exp_year: parseInt(form.values.expiry.substring(3, 5)),\n        cvc: form.values.cvc\n      });\n    };\n\n    _this.cardSelected = function (cardNumber, expMonth, expYear) {\n      _this.setState({\n        number: cardNumber,\n        exp_month: expMonth,\n        exp_year: expYear,\n        openCVCModal: true\n      });\n    };\n\n    _this.onSubmit = function _callee() {\n      var card, token, amount;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                openCVCModal: false\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(stripe.createToken({\n                card: {\n                  \"number\": _this.state.number,\n                  \"exp_month\": _this.state.exp_month,\n                  \"exp_year\": _this.state.exp_year,\n                  \"cvc\": _this.state.cvc\n                }\n              }));\n\n            case 3:\n              card = _context.sent;\n              token = card.id;\n              amount = parseFloat(global.price);\n              makePayment(global.fName, global.email, amount, token).then(function (res) {\n                if (res) {\n                  Alert.alert('Payment was successfull', 'Do you want to save this card for future use ?', [{\n                    text: 'NO',\n                    onPress: function onPress() {\n                      return _this.props.navigation.navigate('home');\n                    },\n                    style: 'cancel'\n                  }, {\n                    text: 'YES',\n                    onPress: function onPress() {\n                      return _this.acceptPressed();\n                    }\n                  }], {\n                    cancelable: false\n                  });\n                }\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.acceptPressed = function () {\n      var _this$state = _this.state,\n          number = _this$state.number,\n          exp_month = _this$state.exp_month,\n          exp_year = _this$state.exp_year;\n      var creatorOfCard = global.userId;\n      saveUserCard(number, exp_month, exp_year, creatorOfCard).then(function (res) {\n        Alert.alert('Card Saved Succesfully', 'Do you want to return Home screen ?', [{\n          text: 'Cancel',\n          onPress: function onPress() {\n            return console.log('Cancel Pressed');\n          },\n          style: 'cancel'\n        }, {\n          text: 'OK',\n          onPress: function onPress() {\n            return _this.props.navigation.navigate('home');\n          }\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreditCardCharge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var creatorOfCard = global.userId;\n      getCards(creatorOfCard).then(function (res) {\n        _this2.setState({\n          cards: res.cards\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          top: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      }, React.createElement(CreditCardInput, {\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, React.createElement(Button, {\n        full: true,\n        style: {\n          marginTop: 15,\n          backgroundColor: '#921721'\n        },\n        onPress: function onPress() {\n          return _this3.onSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, React.createElement(Text, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, \"Submit\"))), React.createElement(FlatList, {\n        data: this.state.cards,\n        keyExtractor: function keyExtractor(item) {\n          return item.expMonth.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.cardSelected(item.cardNumber, item.expMonth, item.expYear);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            }\n          }, React.createElement(Card, {\n            title: item.cardNumber.replace(/(\\d{4}(?!\\s))/g, \"$1 \") + \"\\n\" + \"\\n\" + item.expMonth + \"/\" + item.expYear,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.openCVCModal,\n        onRequestClose: function onRequestClose() {\n          return _this3.setState({\n            openCVCModal: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, React.createElement(View, {\n        style: {\n          top: 120,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        }\n      }, React.createElement(Card, {\n        title: this.state.number.replace(/(\\d{4}(?!\\s))/g, \"$1 \") + \"\\n\" + \"\\n\" + this.state.exp_month + \"/\" + this.state.exp_year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 17,\n          color: 'black',\n          top: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        }\n      }, \"Please enter CVC code of Card showed above\"), React.createElement(Input, {\n        full: true,\n        secureTextEntry: true,\n        testID: \"cvc\",\n        keyboardType: \"phone-pad\",\n        label: \"CVC\",\n        style: {\n          color: 'black'\n        },\n        value: this.state.cvc,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            cvc: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.payBtn, {\n          backgroundColor: 'green'\n        }],\n        onPress: function onPress() {\n          return _this3.onSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, \"Submit\")), React.createElement(TouchableOpacity, {\n        style: styles.payBtn,\n        onPress: function onPress() {\n          return _this3.setState({\n            openCVCModal: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        }\n      }, \"Cancel\"))))));\n    }\n  }]);\n\n  return CreditCardCharge;\n}(Component);\n\nexport { CreditCardCharge as default };\nvar styles = {\n  payBtn: {\n    borderRadius: 6,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12 * 1.2,\n    backgroundColor: '#D83C54'\n  }\n};","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/CreditCardCharge.js"],"names":["React","Component","Button","Text","CreditCardInput","saveUserCard","getCards","makePayment","Card","Input","FontAwesome","stripe","require","CreditCardCharge","state","number","exp_month","exp_year","cvc","cards","openCVCModal","onChange","form","setState","values","replace","parseInt","expiry","substring","cardSelected","cardNumber","expMonth","expYear","onSubmit","createToken","card","token","id","amount","parseFloat","global","price","fName","email","then","res","Alert","alert","text","onPress","props","navigation","navigate","style","acceptPressed","cancelable","creatorOfCard","userId","console","log","top","alignItems","justifyContent","marginTop","backgroundColor","item","toString","fontSize","color","flexDirection","styles","payBtn","borderRadius","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {View, Alert, FlatList, TouchableOpacity, Modal} from \"react-native\";\nimport { Button, Text } from '../registerComponents';\nimport { CreditCardInput } from \"react-native-credit-card-input\";\nimport { saveUserCard, getCards } from \"../Requests/profileRequest\";\nimport makePayment from \"../Requests/makePayment\";\nimport { Card } from 'react-native-elements';\nimport { Input } from '../registerComponents';\nimport { FontAwesome } from '@expo/vector-icons';\nvar stripe = require('stripe-client')('pk_test_Umwwh7JNL9kbihbfvhK0lykW00XnLlHQDX');\n\nexport default class CreditCardCharge extends Component {\n\n  state = {\n    number: '',\n    exp_month: '',\n    exp_year: '',\n    cvc: '',\n    cards: [],\n    openCVCModal: false,\n  }\n\n  componentDidMount() {\n    const creatorOfCard = global.userId;\n\n    getCards(creatorOfCard).then(res => {\n      this.setState({ cards: res.cards });\n    })\n  }\n\n  onChange = (form) => { \n    this.setState({ \n        number: form.values.number.replace(/\\s+/g, ''), \n        exp_month: parseInt(form.values.expiry.substring(0, 2)), \n        exp_year: parseInt(form.values.expiry.substring(3,5)), \n        cvc: form.values.cvc,\n    });\n  }\n\n  cardSelected = (cardNumber, expMonth, expYear) => {\n    this.setState({\n      number: cardNumber,\n      exp_month: expMonth,\n      exp_year: expYear,\n      openCVCModal: true\n    });\n  }\n\n  onSubmit = async() => {\n\n    this.setState({ openCVCModal: false })\n\n    var card = await stripe.createToken({\n      card: {\n        \"number\": this.state.number,\n        \"exp_month\": this.state.exp_month,\n        \"exp_year\": this.state.exp_year,\n        \"cvc\": this.state.cvc\n      }\n    });\n\n    var token = card.id;\n    var amount = parseFloat(global.price);\n\n    makePayment(global.fName, global.email, amount, token).then((res) => {\n      if(res){\n        Alert.alert(\n          'Payment was successfull',\n          'Do you want to save this card for future use ?',\n          [\n            {\n              text: 'NO',\n              onPress: () => this.props.navigation.navigate('home'),\n              style: 'cancel',\n            },\n            {text: 'YES', onPress: () => this.acceptPressed()},\n          ],\n          {cancelable: false},\n        );\n      }   \n    })\n  }\n\n  acceptPressed = () => {\n    const {number, exp_month, exp_year} = this.state;\n    const creatorOfCard = global.userId;\n\n    saveUserCard(number, exp_month, exp_year, creatorOfCard).then(res => {\n      Alert.alert(\n        'Card Saved Succesfully',\n        'Do you want to return Home screen ?',\n        [\n          {\n            text: 'Cancel',\n            onPress: () => console.log('Cancel Pressed'),\n            style: 'cancel',\n          },\n          {text: 'OK', onPress: () => this.props.navigation.navigate('home')},\n        ],\n        {cancelable: false},\n      );\n    })\n  }\n\n  render() {\n    return (\n      <View style={{ top: 60 }}>\n        <CreditCardInput onChange={this.onChange} />\n\n        <View style={{ alignItems: 'center', justifyContent: 'center'}}>\n        <Button\n            full\n            style={{ marginTop: 15, backgroundColor: '#921721' }}\n            onPress={() => this.onSubmit()}\n        >\n            <Text button>Submit</Text>\n        </Button>\n        </View>\n\n        <FlatList \n          data={this.state.cards}\n          keyExtractor={item => item.expMonth.toString()}\n          renderItem={({ item }) =>\n          <TouchableOpacity onPress={() => this.cardSelected(item.cardNumber, item.expMonth, item.expYear)}>\n            <Card\n              title={item.cardNumber.replace(/(\\d{4}(?!\\s))/g, \"$1 \") + \"\\n\" + \"\\n\" + item.expMonth + \"/\" + item.expYear}>\n            </Card>\n          </TouchableOpacity>\n        }\n        />\n\n      <Modal\n        animationType=\"slide\"\n        transparent={false}\n        visible={this.state.openCVCModal}\n        onRequestClose={() => this.setState({ openCVCModal: false})}\n      >\n        <View style={{ top: 120, alignItems: 'center' }}>\n          <Card\n            title={this.state.number.replace(/(\\d{4}(?!\\s))/g, \"$1 \") + \"\\n\" + \"\\n\" + this.state.exp_month + \"/\" + this.state.exp_year}>\n          </Card>\n          <Text style={{ fontSize: 17, color: 'black', top: 5 }}>Please enter CVC code of Card showed above</Text>\n          <Input\n            full\n            secureTextEntry\n            testID=\"cvc\"\n            keyboardType='phone-pad'\n            label=\"CVC\"\n            style={{color: 'black' }}\n            value={this.state.cvc}\n            onChangeText={(text) => this.setState({ cvc: text })}\n          />\n          <View style={{ flexDirection: 'row'}}>\n            <TouchableOpacity style={[styles.payBtn, {backgroundColor: 'green'}]} onPress={() => this.onSubmit()}>\n              <Text>\n                Submit\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.payBtn} onPress={() => this.setState({ openCVCModal: false })}>\n              <Text>\n                Cancel\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  payBtn: {\n    borderRadius: 6,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12 * 1.2,\n    backgroundColor: '#D83C54',\n  },\n};"]},"metadata":{},"sourceType":"module"}