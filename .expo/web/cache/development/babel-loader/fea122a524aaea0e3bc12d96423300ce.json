{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Technology.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header, Left, Icon, Body, Title, Right } from 'native-base';\nimport { CardSection } from \"../components\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport makeRequest from \"../Requests/makeRequest\";\nimport getPushTokens from \"../Requests/getPushTokens\";\nimport sendPushNotification from \"../Requests/sendPushNotification\";\nimport date from 'date-and-time';\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\nimport ModalSelector from 'react-native-modal-selector';\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar paymentMethod = [{\n  status: 'Cash'\n}, {\n  status: 'Card'\n}];\n\nvar Technology = function (_Component) {\n  _inherits(Technology, _Component);\n\n  function Technology(props) {\n    var _this;\n\n    _classCallCheck(this, Technology);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Technology).call(this, props));\n\n    _this.makeOrder = function () {\n      var _this$state = _this.state,\n          userLocation = _this$state.userLocation,\n          creator = _this$state.creator,\n          price = _this$state.price,\n          paymentType = _this$state.paymentType,\n          problem = _this$state.problem,\n          serviceType = _this$state.serviceType,\n          scheduled = _this$state.scheduled,\n          address = _this$state.address;\n      var latitudeFrom = userLocation.latitude;\n      var longitudeFrom = userLocation.longitude;\n      makeRequest(latitudeFrom, longitudeFrom, creator, price, paymentType, problem, serviceType, scheduled, address).then(function (res) {\n        if (res) {\n          getPushTokens(serviceType).then(function (res) {\n            var i;\n\n            for (i = 0; i < res.tokens.length; i++) {\n              var to = res.tokens[i].token;\n              var title = \"New Request\";\n              var body = \"New Technology Repairing Request\";\n              sendPushNotification(to, title, body).then(function (res) {\n                console.log(res);\n              });\n            }\n          });\n\n          _this.props.navigation.navigate(\"successOrder\");\n        }\n      });\n    };\n\n    _this.notifyChange = function (data, details) {\n      _this.getCoordsFromName(data);\n\n      _this.setState({\n        address: details.formatted_address\n      });\n    };\n\n    _this.showDateTimePicker = function () {\n      _this.setState({\n        isDateTimePickerVisible: true\n      });\n    };\n\n    _this.hideDateTimePicker = function () {\n      _this.setState({\n        isDateTimePickerVisible: false\n      });\n    };\n\n    _this.handleDatePicked = function (dateTime) {\n      dateTime = date.format(dateTime, \"YYYY-MM-DD HH:mm\");\n\n      _this.setState({\n        scheduled: dateTime\n      });\n\n      _this.hideDateTimePicker();\n    };\n\n    _this.state = {\n      serviceType: 'Technology',\n      problem: '',\n      userLocation: \"\",\n      creator: global.userId,\n      price: 0,\n      address: '',\n      scheduled: 'Add Schedule for request',\n      paymentType: 'Chose payment method',\n      isDateTimePickerVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Technology, [{\n    key: \"getCoordsFromName\",\n    value: function getCoordsFromName(data) {\n      this.setState({\n        userLocation: {\n          latitude: data.lat,\n          longitude: data.lng,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, React.createElement(Header, {\n        style: {\n          backgroundColor: \"#97387a\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, React.createElement(Left, {\n        style: {\n          left: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-arrow-back\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('home');\n        },\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      })), React.createElement(Body, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      }, React.createElement(Title, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, \"Order\")), React.createElement(Right, {\n        style: {\n          right: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-checkmark\",\n        onPress: function onPress() {\n          return _this2.makeOrder();\n        },\n        style: {\n          color: 'white',\n          fontSize: 42\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }))), React.createElement(View, {\n        style: {\n          backgroundColor: \"#51a323\",\n          width: width,\n          height: width * 0.27,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, React.createElement(Image, {\n        style: styles.serviceImage,\n        imageStyle: styles.serviceImage,\n        source: require(\"../../assets/Icons/tech.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      })), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, React.createElement(GooglePlacesAutocomplete, {\n        placeholder: \"Enter your Location\",\n        minLength: 2,\n        autoFocus: false,\n        returnKeyType: 'search',\n        listViewDisplayed: \"false\",\n        fetchDetails: true,\n        styles: {\n          textInputContainer: {\n            backgroundColor: 'white',\n            borderTopWidth: 0,\n            borderBottomWidth: 0,\n            borderRadius: 9,\n            left: -17\n          }\n        },\n        renderDescription: function renderDescription(row) {\n          return row.description;\n        },\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n          _this2.notifyChange(details.geometry.location, details);\n        },\n        query: {\n          key: 'AIzaSyAjL_doMA-BBX1S-Lx_BJXrPAjQCFh3UrM',\n          language: 'en'\n        },\n        nearbyPlacesAPI: \"GooglePlacesSearch\",\n        debounce: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        }\n      })), React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, React.createElement(TextInput, _extends({}, this.props, {\n        editable: true,\n        maxLength: 1000,\n        style: {\n          fontSize: 18\n        },\n        multiline: true,\n        placeholder: \"Briefly Describe your problem\",\n        value: this.state.problem,\n        onChangeText: function onChangeText(problem) {\n          return _this2.setState({\n            problem: problem\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        }\n      }))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.showDateTimePicker();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        }\n      }, React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        }\n      }, React.createElement(DateTimePicker, {\n        isVisible: this.state.isDateTimePickerVisible,\n        onConfirm: this.handleDatePicked,\n        onCancel: this.hideDateTimePicker,\n        minimumDate: new Date(),\n        mode: 'datetime',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      }, this.state.scheduled))), React.createElement(ModalSelector, {\n        data: paymentMethod,\n        initValue: \"Choose payment method\",\n        keyExtractor: function keyExtractor(key) {\n          return key.status;\n        },\n        labelExtractor: function labelExtractor(item) {\n          return item.status;\n        },\n        accessible: true,\n        scrollViewAccessibilityLabel: 'Scrollable options',\n        cancelButtonAccessibilityLabel: 'Cancel Button',\n        onChange: function onChange(option) {\n          return _this2.setState({\n            paymentType: option.status\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      }, React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, this.state.paymentType))));\n    }\n  }]);\n\n  return Technology;\n}(Component);\n\nexport { Technology as default };\nvar styles = StyleSheet.create({\n  serviceImage: {\n    width: width * 0.30,\n    height: width * 0.25,\n    borderRadius: 6,\n    top: 3\n  }\n});","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Technology.js"],"names":["React","Component","Header","Left","Icon","Body","Title","Right","CardSection","GooglePlacesAutocomplete","makeRequest","getPushTokens","sendPushNotification","date","DateTimePicker","ModalSelector","Dimensions","get","width","height","paymentMethod","status","Technology","props","makeOrder","state","userLocation","creator","price","paymentType","problem","serviceType","scheduled","address","latitudeFrom","latitude","longitudeFrom","longitude","then","res","i","tokens","length","to","token","title","body","console","log","navigation","navigate","notifyChange","data","details","getCoordsFromName","setState","formatted_address","showDateTimePicker","isDateTimePickerVisible","hideDateTimePicker","handleDatePicked","dateTime","format","global","userId","lat","lng","latitudeDelta","longitudeDelta","backgroundColor","left","color","flex","right","fontSize","alignItems","styles","serviceImage","require","textInputContainer","borderTopWidth","borderBottomWidth","borderRadius","row","description","geometry","location","key","language","Date","item","option","StyleSheet","create","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {View,Text, StyleSheet, Dimensions, Image, TextInput, TouchableOpacity} from \"react-native\";\r\nimport {Header, Left, Icon, Body, Title, Right} from 'native-base';\r\nimport {CardSection} from '../components';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\nimport makeRequest from '../Requests/makeRequest';\r\nimport getPushTokens from '../Requests/getPushTokens';\r\nimport sendPushNotification from '../Requests/sendPushNotification';\r\nimport date from 'date-and-time';\r\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\r\nimport ModalSelector from 'react-native-modal-selector';\r\n\r\nconst { width, height } = Dimensions.get('screen');\r\n\r\nconst paymentMethod = [{status: 'Cash'}, {status: 'Card'}];\r\n\r\nexport default class Technology extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      serviceType: 'Technology',\r\n      problem: '',\r\n      userLocation: \"\",\r\n      creator: global.userId,\r\n      price: 0,\r\n      address: '',\r\n      scheduled: 'Add Schedule for request',\r\n      paymentType: 'Chose payment method',\r\n      isDateTimePickerVisible: false\r\n    }\r\n  }\r\n\r\n  makeOrder = () => {\r\n    const { userLocation, creator, price, paymentType,  problem, serviceType, scheduled, address } = this.state; \r\n    const latitudeFrom = userLocation.latitude;\r\n    const longitudeFrom = userLocation.longitude;\r\n    \r\n    makeRequest(latitudeFrom, longitudeFrom, creator, price, paymentType, problem, serviceType, scheduled, address).then(res => {\r\n      if(res){\r\n        getPushTokens(serviceType).then(res => {\r\n\r\n          var i;\r\n          for (i = 0; i < res.tokens.length; i++) {\r\n            var to = res.tokens[i].token;\r\n            const title = \"New Request\";\r\n            const body = \"New Technology Repairing Request\";\r\n\r\n            sendPushNotification(to, title, body).then(res => {\r\n              console.log(res);       \r\n            })\r\n          }        \r\n        })\r\n        this.props.navigation.navigate(\"successOrder\");\r\n      } \r\n    })\r\n  }\r\n\r\n  getCoordsFromName(data) {\r\n    this.setState({\r\n      userLocation: {\r\n        latitude: data.lat,\r\n        longitude: data.lng,\r\n        latitudeDelta: 0.0922,\r\n        longitudeDelta: 0.0421\r\n      }\r\n    });\r\n  }\r\n\r\n  notifyChange = (data, details) => {\r\n    this.getCoordsFromName(data);\r\n\r\n    this.setState({ address: details.formatted_address});\r\n  }\r\n\r\n  showDateTimePicker = () => {\r\n    this.setState({ isDateTimePickerVisible: true });\r\n  };\r\n\r\n  hideDateTimePicker = () => {\r\n    this.setState({ isDateTimePickerVisible: false });\r\n  };\r\n\r\n  handleDatePicked = dateTime => {\r\n    dateTime = date.format(dateTime, \"YYYY-MM-DD HH:mm\");\r\n    this.setState({\r\n      scheduled: dateTime\r\n     })\r\n    this.hideDateTimePicker();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Header style={{ backgroundColor: \"#97387a\"}}>\r\n          <Left style={{ left: 5}}>\r\n            <Icon  name='ios-arrow-back' onPress={() => this.props.navigation.navigate('home')} style={{ color: 'white'}} />\r\n          </Left>\r\n          <Body style={{ flex: 1}}>\r\n            <Title style={{ color: 'white'}}>Order</Title>\r\n          </Body>\r\n          \r\n          <Right style={{ right: 5}}>\r\n            <Icon  name='ios-checkmark' onPress={() => this.makeOrder()} style={{ color: 'white', fontSize: 42}} />\r\n          </Right>\r\n        </Header>\r\n        <View style={{backgroundColor: \"#51a323\", width: width, height: width * 0.27, alignItems: 'center'}}>\r\n            <Image style={styles.serviceImage} imageStyle={styles.serviceImage} source={require('../../assets/Icons/tech.png')}/>\r\n        </View>\r\n\r\n        <CardSection>\r\n          <GooglePlacesAutocomplete\r\n                placeholder=\"Enter your Location\"\r\n                minLength={2}\r\n                autoFocus={false}\r\n                returnKeyType={'search'}\r\n                listViewDisplayed=\"false\"\r\n                fetchDetails={true}\r\n                styles={{\r\n                  textInputContainer: {\r\n                    backgroundColor: 'white',\r\n                    borderTopWidth: 0,\r\n                    borderBottomWidth:0,\r\n                    borderRadius: 9,\r\n                    left: -17\r\n                  },\r\n                }}\r\n                renderDescription={row => row.description}\r\n                onPress={(data, details = null) => {\r\n                    this.notifyChange(details.geometry.location, details);\r\n                }\r\n              }\r\n              query={{\r\n                  key: 'AIzaSyAjL_doMA-BBX1S-Lx_BJXrPAjQCFh3UrM',\r\n                  language: 'en',\r\n                }}\r\n                nearbyPlacesAPI='GooglePlacesSearch'\r\n                debounce={200}\r\n              />\r\n        </CardSection>\r\n\r\n        <CardSection>\r\n          <TextInput\r\n            {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\r\n            editable = {true}\r\n            maxLength = {1000}\r\n            style={{ fontSize: 18 }}\r\n            multiline = {true}\r\n            placeholder=\"Briefly Describe your problem\"\r\n            value={this.state.problem}\r\n            onChangeText={problem => this.setState({ problem })}\r\n           />\r\n        </CardSection>\r\n\r\n        <TouchableOpacity onPress={() => this.showDateTimePicker()}>\r\n          <CardSection>\r\n            <DateTimePicker\r\n              isVisible={this.state.isDateTimePickerVisible}\r\n              onConfirm={this.handleDatePicked}\r\n              onCancel={this.hideDateTimePicker}\r\n              minimumDate={new Date()}\r\n              mode={'datetime'}\r\n            />\r\n            <Text style={{ fontSize: 18 }} >{this.state.scheduled}</Text>\r\n          </CardSection>\r\n        </TouchableOpacity>\r\n\r\n        <ModalSelector\r\n            data={paymentMethod}\r\n            initValue=\"Choose payment method\"\r\n            keyExtractor={key => key.status}\r\n            labelExtractor= {item => item.status}\r\n            accessible={true}\r\n            scrollViewAccessibilityLabel={'Scrollable options'}\r\n            cancelButtonAccessibilityLabel={'Cancel Button'}\r\n            onChange={(option) => this.setState({ paymentType: option.status })}>\r\n            <CardSection>\r\n              <Text style={{ fontSize: 18 }} >{this.state.paymentType}</Text>\r\n            </CardSection>\r\n        </ModalSelector>\r\n    \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    serviceImage: {\r\n      width: width * 0.30,\r\n      height: width * 0.25,\r\n      borderRadius: 6,\r\n      top: 3\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}