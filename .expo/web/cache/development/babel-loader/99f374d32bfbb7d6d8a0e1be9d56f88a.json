{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Login.js\";\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Button, Block, Input, Text } from \"../components\";\nimport { theme } from \"../constants\";\nimport loginRequest from \"../Requests/loginRequest\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errors: [],\n      loading: false\n    };\n\n    _this.handleLogin = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var errors = [];\n      Keyboard.dismiss();\n\n      _this.setState({\n        loading: true\n      });\n\n      if (email === '' || password === '') {\n        errors.push(\"email\");\n        errors.push(\"password\");\n\n        _this.setState({\n          errors: errors,\n          loading: false\n        });\n      } else {\n        loginRequest(email, password).then(function (res) {\n          if (res === undefined) {\n            errors.push(\"email\");\n            errors.push(\"password\");\n\n            _this.setState({\n              errors: errors,\n              loading: false\n            });\n          } else if (res.token) {\n            global.userId = res.userId;\n\n            _this.props.navigation.navigate('home');\n\n            _this.setState({\n              errors: errors,\n              loading: false,\n              email: '',\n              password: ''\n            });\n          }\n\n          ;\n        });\n      }\n    };\n\n    _this.handleRegister = function () {\n      _this.props.navigation.navigate('register');\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          errors = _this$state2.errors;\n\n      var hasErrors = function hasErrors(key) {\n        return errors.includes(key) ? styles.hasErrors : null;\n      };\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.login,\n        behavior: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../../assets/UsedPhotos/Login.jpg\"),\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, React.createElement(Block, {\n        padding: [0, theme.sizes.base * 2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, React.createElement(Text, {\n        center: true,\n        white: true,\n        bold: true,\n        style: {\n          top: 40,\n          fontSize: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, \"Fixify\"), React.createElement(Block, {\n        middle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(Input, {\n        label: \"Email\",\n        testID: \"email\",\n        placeholder: \"user@email.com\",\n        error: hasErrors(\"email\"),\n        style: [styles.input, hasErrors(\"email\")],\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }), React.createElement(Input, {\n        secure: true,\n        label: \"Password\",\n        testID: \"password\",\n        placeholder: \"password\",\n        error: hasErrors(\"password\"),\n        style: [styles.input, hasErrors(\"password\")],\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }), React.createElement(Button, {\n        color: \"#681f51\",\n        onPress: function onPress() {\n          return _this2.handleLogin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, loading ? React.createElement(ActivityIndicator, {\n        size: \"small\",\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }) : React.createElement(Text, {\n        bold: true,\n        white: true,\n        center: true,\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, \"Login\")), React.createElement(Button, {\n        white: true,\n        onPress: function onPress() {\n          return _this2.handleRegister();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, React.createElement(Text, {\n        bold: true,\n        center: true,\n        style: {\n          fontSize: 18,\n          color: '#98377a'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, \"Register\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  login: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  input: {\n    borderRadius: 0,\n    borderWidth: 0,\n    borderBottomColor: theme.colors.gray2,\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  hasErrors: {\n    borderBottomColor: theme.colors.accent\n  }\n});","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Login.js"],"names":["React","Component","Button","Block","Input","Text","theme","loginRequest","Login","state","email","password","errors","loading","handleLogin","Keyboard","dismiss","setState","push","then","res","undefined","token","global","userId","props","navigation","navigate","handleRegister","hasErrors","key","includes","styles","login","require","width","height","sizes","base","top","fontSize","input","text","color","StyleSheet","create","flex","justifyContent","borderRadius","borderWidth","borderBottomColor","colors","gray2","borderBottomWidth","hairlineWidth","accent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  ImageBackground\r\n} from \"react-native\";\r\n\r\nimport { Button, Block, Input, Text } from \"../components\";\r\nimport { theme } from \"../constants\";\r\nimport loginRequest from '../Requests/loginRequest';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: [],\r\n    loading: false\r\n  };\r\n\r\n  handleLogin = () => {\r\n    const { email, password } = this.state;\r\n    const errors = [];\r\n\r\n    Keyboard.dismiss();\r\n    this.setState({ loading: true });\r\n\r\n    if(email === '' || password === ''){\r\n        errors.push(\"email\");\r\n        errors.push(\"password\");\r\n        this.setState({ errors, loading: false });\r\n    }else{\r\n      loginRequest(email, password).then(res => {\r\n        if(res === undefined){\r\n        errors.push(\"email\");\r\n        errors.push(\"password\");\r\n        this.setState({ errors, loading: false })\r\n        }            \r\n        else if(res.token){\r\n          global.userId = res.userId; \r\n          this.props.navigation.navigate('home');\r\n          this.setState({ errors, loading: false, email: '', password: '' });\r\n        };\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  handleRegister = () => {\r\n    this.props.navigation.navigate('register');\r\n  }\r\n\r\n  render() {\r\n    const { navigation } = this.props;\r\n    const { loading, errors } = this.state;\r\n    const hasErrors = key => (errors.includes(key) ? styles.hasErrors : null);\r\n\r\n    return (\r\n      <KeyboardAvoidingView style={styles.login} behavior=\"padding\">\r\n        <ImageBackground source={require('../../assets/UsedPhotos/Login.jpg')} style={{width: '100%', height: '100%'}}>\r\n            <Block padding={[0, theme.sizes.base * 2]}>\r\n            <Text center white bold style={{top: 40, fontSize: 40}}>\r\n                Fixify\r\n            </Text>\r\n            <Block middle>\r\n                <Input\r\n                label=\"Email\"\r\n                testID=\"email\"\r\n                placeholder=\"user@email.com\"\r\n                error={hasErrors(\"email\")}\r\n                style={[styles.input, hasErrors(\"email\")]}\r\n                value={this.state.email}\r\n                onChangeText={text => this.setState({ email: text })}\r\n                />\r\n                <Input\r\n                secure\r\n                label=\"Password\"\r\n                testID=\"password\"\r\n                placeholder=\"password\"\r\n                error={hasErrors(\"password\")}\r\n                style={[styles.input, hasErrors(\"password\")]}\r\n                value={this.state.password}\r\n                onChangeText={text => this.setState({ password: text })}\r\n                />\r\n                <Button color='#681f51' onPress={() => this.handleLogin()}>\r\n                {loading ? (\r\n                    <ActivityIndicator size=\"small\" color=\"white\" />\r\n                ) : (\r\n                    <Text bold white center style={{ fontSize: 18 }}>\r\n                    Login\r\n                    </Text>\r\n                )}\r\n                </Button>\r\n\r\n                <Button white onPress={() => this.handleRegister()}>\r\n                    <Text bold center style={{ fontSize: 18, color: '#98377a' }}>\r\n                    Register\r\n                    </Text>\r\n                </Button>\r\n            </Block>\r\n            </Block>\r\n        </ImageBackground>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  login: {\r\n    flex: 1,\r\n    justifyContent: \"center\"\r\n  },\r\n  input: {\r\n    borderRadius: 0,\r\n    borderWidth: 0,\r\n    borderBottomColor: theme.colors.gray2,\r\n    borderBottomWidth: StyleSheet.hairlineWidth\r\n  },\r\n  hasErrors: {\r\n    borderBottomColor: theme.colors.accent\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}