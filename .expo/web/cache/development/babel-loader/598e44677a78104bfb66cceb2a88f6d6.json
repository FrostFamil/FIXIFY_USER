{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Home.js\";\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Header, Left, Icon, Body, Title, Right } from 'native-base';\nimport ServiceList from \"../mocks/ServiceList\";\nimport * as Permissions from 'expo-permissions';\nimport { Notifications } from 'expo';\nimport { Entypo } from '@expo/vector-icons';\nimport { profileRequest } from \"../Requests/profileRequest\";\nimport { pushNotification } from \"../Requests/pushNotification\";\nimport { StackActions, NavigationActions } from 'react-navigation';\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function _callee() {\n      var previousToken, _await$Permissions$as, status, token;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              profileRequest(global.userId).then(function (res) {\n                global.fName = res.firstName;\n                global.email = res.email;\n                global.lName = res.lastName;\n              });\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userPushToken'));\n\n            case 3:\n              previousToken = _context.sent;\n              console.log(previousToken);\n\n              if (!previousToken) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n            case 11:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 15;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 15:\n              _context.next = 17;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 17:\n              token = _context.sent;\n              AsyncStorage.setItem('userPushToken', token);\n              pushNotification(token, global.fName, global.lName, global.userId).then(function (res) {\n                console.log(res);\n              });\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.techBranchPressed = function () {\n      _this.props.navigation.navigate('technology');\n    };\n\n    _this.plumberBranchPressed = function () {\n      _this.props.navigation.navigate('plumber');\n    };\n\n    _this.electricBranchPressed = function () {\n      _this.props.navigation.navigate('electric');\n    };\n\n    _this.furnitureBranchPressed = function () {\n      _this.props.navigation.navigate('furniture');\n    };\n\n    _this.autoBranchPressed = function () {\n      _this.props.navigation.navigate('auto');\n    };\n\n    _this.householdBranchPressed = function () {\n      _this.props.navigation.navigate('household');\n    };\n\n    _this.logOutPressed = function () {\n      var resetAction = StackActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: 'First'\n        })]\n      });\n\n      _this.props.navigation.dispatch(resetAction);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, React.createElement(Header, {\n        style: {\n          backgroundColor: \"#97387a\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }, React.createElement(Left, {\n        style: {\n          left: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(Icon, {\n        name: \"menu\",\n        onPress: function onPress() {\n          return _this2.props.navigation.openDrawer();\n        },\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      })), React.createElement(Body, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, React.createElement(Title, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, \"Services\")), React.createElement(Right, {\n        style: {\n          right: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, React.createElement(Entypo, {\n        name: \"log-out\",\n        size: 22,\n        onPress: function onPress() {\n          return _this2.logOutPressed();\n        },\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      }))), React.createElement(ServiceList, {\n        techPressed: function techPressed() {\n          return _this2.techBranchPressed();\n        },\n        plumberPressed: function plumberPressed() {\n          return _this2.plumberBranchPressed();\n        },\n        electricPressed: function electricPressed() {\n          return _this2.electricBranchPressed();\n        },\n        furniturePressed: function furniturePressed() {\n          return _this2.furnitureBranchPressed();\n        },\n        autoPressed: function autoPressed() {\n          return _this2.autoBranchPressed();\n        },\n        householdPressed: function householdPressed() {\n          return _this2.householdBranchPressed();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nHome.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var state = navigation.state;\n  return {\n    drawerIcon: function drawerIcon() {\n      return React.createElement(Entypo, {\n        name: \"tools\",\n        size: 25,\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      });\n    },\n    drawerLabel: function drawerLabel() {\n      return React.createElement(Text, {\n        style: {\n          color: 'black',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }, \"Services\");\n    }\n  };\n};\n\nexport { Home as default };","map":{"version":3,"sources":["/Users/familsamadli/Desktop/FIXIFY_USER/src/screens/Home.js"],"names":["React","Component","Header","Left","Icon","Body","Title","Right","ServiceList","Permissions","Notifications","Entypo","profileRequest","pushNotification","StackActions","NavigationActions","Home","componentDidMount","global","userId","then","res","fName","firstName","email","lName","lastName","AsyncStorage","getItem","previousToken","console","log","askAsync","NOTIFICATIONS","status","getExpoPushTokenAsync","token","setItem","techBranchPressed","props","navigation","navigate","plumberBranchPressed","electricBranchPressed","furnitureBranchPressed","autoBranchPressed","householdBranchPressed","logOutPressed","resetAction","reset","index","actions","routeName","dispatch","backgroundColor","left","openDrawer","color","flex","right","navigationOptions","state","drawerIcon","drawerLabel","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {View,Text, AsyncStorage} from \"react-native\";\r\nimport {Header, Left, Icon, Body, Title, Right} from 'native-base';\r\nimport ServiceList from '../mocks/ServiceList';\r\nimport * as Permissions from 'expo-permissions';\r\nimport {Notifications} from 'expo'\r\nimport {Entypo} from '@expo/vector-icons';\r\nimport {profileRequest} from '../Requests/profileRequest';\r\nimport {pushNotification} from '../Requests/pushNotification';\r\nimport {StackActions, NavigationActions} from 'react-navigation';\r\n\r\nexport default class Home extends Component {\r\n\r\n  static navigationOptions = ({navigation}) => {\r\n    const {state} = navigation;\r\n\r\n    return {\r\n      drawerIcon: () => (\r\n        <Entypo name=\"tools\" size={25} style={{ color: 'black' }} />\r\n      ),\r\n      drawerLabel: () => (\r\n        <Text style={{ color: 'black', fontSize: 20 }}>Services</Text>  \r\n      ),\r\n    }\r\n  }\r\n\r\n  componentDidMount = async() => {\r\n    profileRequest(global.userId).then(res => {\r\n      global.fName = res.firstName;\r\n      global.email = res.email;\r\n      global.lName = res.lastName;  \r\n    });\r\n\r\n    let previousToken = await AsyncStorage.getItem('userPushToken');\r\n\r\n    console.log(previousToken);\r\n\r\n    if (previousToken){\r\n      return;\r\n    }else{\r\n    let {status} = await Permissions.askAsync(Permissions.NOTIFICATIONS);\r\n\r\n    if ( status !== 'granted' ){\r\n      return;\r\n    }\r\n\r\n    let token = await Notifications.getExpoPushTokenAsync();\r\n    AsyncStorage.setItem('userPushToken', token);\r\n    \r\n    pushNotification(token, global.fName, global.lName, global.userId).then(res => {\r\n      console.log(res);    \r\n    })\r\n  }\r\n  }\r\n\r\n  techBranchPressed = () => {\r\n    this.props.navigation.navigate('technology');\r\n  }\r\n\r\n  plumberBranchPressed = () => {\r\n    this.props.navigation.navigate('plumber');\r\n  }\r\n\r\n  electricBranchPressed = () => {\r\n    this.props.navigation.navigate('electric');\r\n  }\r\n\r\n  furnitureBranchPressed = () => {\r\n    this.props.navigation.navigate('furniture');\r\n  }\r\n\r\n  autoBranchPressed = () => {\r\n    this.props.navigation.navigate('auto');\r\n  }\r\n\r\n  householdBranchPressed = () => {\r\n    this.props.navigation.navigate('household');\r\n  }\r\n\r\n  logOutPressed = () => {\r\n    const resetAction = StackActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: 'First' })],\r\n    });\r\n    this.props.navigation.dispatch(resetAction);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Header style={{ backgroundColor: \"#97387a\"}}>\r\n          <Left style={{ left: 5}}>\r\n            <Icon  name='menu' onPress={() => this.props.navigation.openDrawer()} style={{ color: 'white'}} />\r\n          </Left>\r\n          <Body style={{ flex: 1}}>\r\n            <Title style={{ color: 'white'}}>Services</Title>\r\n          </Body>\r\n          <Right style={{ right: 5}}>\r\n            <Entypo name=\"log-out\" size={22} onPress={()=> this.logOutPressed()} style={{ color: 'white' }} />\r\n          </Right>\r\n        </Header>\r\n        \r\n        <ServiceList \r\n          techPressed={() => this.techBranchPressed()} \r\n          plumberPressed={() => this.plumberBranchPressed()}\r\n          electricPressed={() => this.electricBranchPressed()}\r\n          furniturePressed={() => this.furnitureBranchPressed()}\r\n          autoPressed={() => this.autoBranchPressed()}\r\n          householdPressed={() => this.householdBranchPressed()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}